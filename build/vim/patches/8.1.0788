To: vim_dev@googlegroups.com
Subject: Patch 8.1.0788
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.0788
Problem:    Cannot build with tiny features.
Solution:   Adjust #ifdefs.
Files:	    src/os_unix.c


*** ../vim-8.1.0787/src/os_unix.c	2019-01-20 18:39:26.572596405 +0100
--- src/os_unix.c	2019-01-20 23:42:11.639598189 +0100
***************
*** 984,989 ****
--- 984,990 ----
  	&& ((defined(FEAT_X11) && defined(FEAT_XCLIPBOARD)) \
  	    || defined(FEAT_LIBCALL))) \
      || defined(PROTO)
+ # define USING_SETJMP 1
  
  // argument to SETJMP()
  static JMP_BUF lc_jump_env;
***************
*** 1023,1031 ****
      static void
  mch_startjmp(void)
  {
! #ifdef SIGHASARG
      lc_signal = 0;
! #endif
      lc_active = TRUE;
  }
  
--- 1024,1032 ----
      static void
  mch_startjmp(void)
  {
! # ifdef SIGHASARG
      lc_signal = 0;
! # endif
      lc_active = TRUE;
  }
  
***************
*** 1063,1069 ****
      int		i;
  #endif
  
! #if defined(HAVE_SETJMP_H)
      /*
       * Catch a crash in protected code.
       * Restores the environment saved in lc_jump_env, which looks like
--- 1064,1070 ----
      int		i;
  #endif
  
! #if defined(USING_SETJMP)
      /*
       * Catch a crash in protected code.
       * Restores the environment saved in lc_jump_env, which looks like
***************
*** 1708,1714 ****
  }
  
  #if defined(FEAT_X11) && defined(FEAT_XCLIPBOARD)
! # if defined(HAVE_SETJMP_H)
  /*
   * An X IO Error handler, used to catch error while opening the display.
   */
--- 1709,1715 ----
  }
  
  #if defined(FEAT_X11) && defined(FEAT_XCLIPBOARD)
! # if defined(USING_SETJMP)
  /*
   * An X IO Error handler, used to catch error while opening the display.
   */
***************
*** 2100,2106 ****
      return retval;
  }
  
! /* Xutf8 functions are not avaialble on older systems. Note that on some
   * systems X_HAVE_UTF8_STRING may be defined in a header file but
   * Xutf8SetWMProperties() is not in the X11 library.  Configure checks for
   * that and defines HAVE_XUTF8SETWMPROPERTIES. */
--- 2101,2107 ----
      return retval;
  }
  
! /* Xutf8 functions are not available on older systems. Note that on some
   * systems X_HAVE_UTF8_STRING may be defined in a header file but
   * Xutf8SetWMProperties() is not in the X11 library.  Configure checks for
   * that and defines HAVE_XUTF8SETWMPROPERTIES. */
***************
*** 2953,2959 ****
  		case ENOTSUP:
  		    /* extended attributes aren't supported or enabled */
  		    /* should a message be echoed? not sure... */
! 		    return; /* leave because it isn't usefull to continue */
  
  		case ERANGE:
  		default:
--- 2954,2960 ----
  		case ENOTSUP:
  		    /* extended attributes aren't supported or enabled */
  		    /* should a message be echoed? not sure... */
! 		    return; /* leave because it isn't useful to continue */
  
  		case ERANGE:
  		default:
***************
*** 7360,7366 ****
      /* If the handle is valid, try to get the function address. */
      if (hinstLib != NULL)
      {
! # ifdef HAVE_SETJMP_H
  	/*
  	 * Catch a crash when calling the library function.  For example when
  	 * using a number where a string pointer is expected.
--- 7361,7367 ----
      /* If the handle is valid, try to get the function address. */
      if (hinstLib != NULL)
      {
! # ifdef USING_SETJMP
  	/*
  	 * Catch a crash when calling the library function.  For example when
  	 * using a number where a string pointer is expected.
***************
*** 7435,7441 ****
  		*string_result = vim_strsave(retval_str);
  	}
  
! # ifdef HAVE_SETJMP_H
  	mch_endjmp();
  #  ifdef SIGHASARG
  	if (lc_signal != 0)
--- 7436,7442 ----
  		*string_result = vim_strsave(retval_str);
  	}
  
! # ifdef USING_SETJMP
  	mch_endjmp();
  #  ifdef SIGHASARG
  	if (lc_signal != 0)
***************
*** 7494,7500 ****
      if (app_context != NULL && xterm_Shell == (Widget)0)
      {
  	int (*oldhandler)();
! # if defined(HAVE_SETJMP_H)
  	int (*oldIOhandler)();
  # endif
  # ifdef ELAPSED_FUNC
--- 7495,7501 ----
      if (app_context != NULL && xterm_Shell == (Widget)0)
      {
  	int (*oldhandler)();
! # if defined(USING_SETJMP)
  	int (*oldIOhandler)();
  # endif
  # ifdef ELAPSED_FUNC
***************
*** 7507,7513 ****
  	/* Ignore X errors while opening the display */
  	oldhandler = XSetErrorHandler(x_error_check);
  
! # if defined(HAVE_SETJMP_H)
  	/* Ignore X IO errors while opening the display */
  	oldIOhandler = XSetIOErrorHandler(x_IOerror_check);
  	mch_startjmp();
--- 7508,7514 ----
  	/* Ignore X errors while opening the display */
  	oldhandler = XSetErrorHandler(x_error_check);
  
! # if defined(USING_SETJMP)
  	/* Ignore X IO errors while opening the display */
  	oldIOhandler = XSetIOErrorHandler(x_IOerror_check);
  	mch_startjmp();
***************
*** 7523,7534 ****
  		    "vim_xterm", "Vim_xterm", NULL, 0, &z, &strp);
  	    if (xterm_dpy != NULL)
  		xterm_dpy_retry_count = 0;
! # if defined(HAVE_SETJMP_H)
  	    mch_endjmp();
  # endif
  	}
  
! # if defined(HAVE_SETJMP_H)
  	/* Now handle X IO errors normally. */
  	(void)XSetIOErrorHandler(oldIOhandler);
  # endif
--- 7524,7535 ----
  		    "vim_xterm", "Vim_xterm", NULL, 0, &z, &strp);
  	    if (xterm_dpy != NULL)
  		xterm_dpy_retry_count = 0;
! # if defined(USING_SETJMP)
  	    mch_endjmp();
  # endif
  	}
  
! # if defined(USING_SETJMP)
  	/* Now handle X IO errors normally. */
  	(void)XSetIOErrorHandler(oldIOhandler);
  # endif
*** ../vim-8.1.0787/src/version.c	2019-01-20 18:39:26.572596405 +0100
--- src/version.c	2019-01-20 23:40:34.340321522 +0100
***************
*** 793,794 ****
--- 793,796 ----
  {   /* Add new patch number below this line */
+ /**/
+     788,
  /**/

-- 
God made the integers; all else is the work of Man.
		-- Kronecker

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
