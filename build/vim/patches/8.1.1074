To: vim_dev@googlegroups.com
Subject: Patch 8.1.1074
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1074
Problem:    Python test doesn't wipe out hidden buffer.
Solution:   Wipe out the buffer. (Ben Jackson, closes #4189)
Files:	    src/testdir/test_python2.vim, src/testdir/test_python3.vim


*** ../vim-8.1.1073/src/testdir/test_python2.vim	2019-03-23 17:41:56.217138373 +0100
--- src/testdir/test_python2.vim	2019-03-30 12:31:36.758040812 +0100
***************
*** 89,120 ****
    call assert_equal( line( '.' ), 11 )
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Clear()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = None
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_List()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = [ 'test' ]
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Str()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = 'test'
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_ClearLine()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = None
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func _SetUpVisibleBuffer()
--- 89,125 ----
    call assert_equal( line( '.' ), 11 )
  endfunc
  
+ func _CleanUpHiddenBuffer()
+   bwipe! hidden
+   bwipe!
+ endfunc
+ 
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Clear()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = None
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_List()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = [ 'test' ]
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Str()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = 'test'
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_ClearLine()
    call _SetUpHiddenBuffer()
    py vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = None
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func _SetUpVisibleBuffer()
*** ../vim-8.1.1073/src/testdir/test_python3.vim	2019-03-23 17:41:56.217138373 +0100
--- src/testdir/test_python3.vim	2019-03-30 12:29:18.918904930 +0100
***************
*** 89,120 ****
    call assert_equal( line( '.' ), 11 )
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Clear()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = None
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_List()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = [ 'test' ]
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Str()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = 'test'
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_ClearLine()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = None
    call assert_equal( line( '.' ), 11 )
!   bwipe!
  endfunc
  
  func _SetUpVisibleBuffer()
--- 89,125 ----
    call assert_equal( line( '.' ), 11 )
  endfunc
  
+ func _CleanUpHiddenBuffer()
+   bwipe! hidden
+   bwipe!
+ endfunc
+ 
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Clear()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = None
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_List()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][:] = [ 'test' ]
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_Str()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = 'test'
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func Test_Write_To_HiddenBuffer_Does_Not_Fix_Cursor_ClearLine()
    call _SetUpHiddenBuffer()
    py3 vim.buffers[ int( vim.eval( 'bufnr("hidden")' ) ) ][0] = None
    call assert_equal( line( '.' ), 11 )
!   call _CleanUpHiddenBuffer()
  endfunc
  
  func _SetUpVisibleBuffer()
*** ../vim-8.1.1073/src/version.c	2019-03-29 18:29:28.452854266 +0100
--- src/version.c	2019-03-30 12:32:24.165745410 +0100
***************
*** 777,778 ****
--- 777,780 ----
  {   /* Add new patch number below this line */
+ /**/
+     1074,
  /**/

-- 
Although the scythe isn't pre-eminent among the weapons of war, anyone who
has been on the wrong end of, say, a peasants' revolt will know that in
skilled hands it is fearsome.
					-- (Terry Pratchett, Mort)

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
