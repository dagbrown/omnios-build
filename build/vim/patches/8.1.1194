To: vim_dev@googlegroups.com
Subject: Patch 8.1.1194
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1194
Problem:    Typos and small problems in source files.
Solution:   Small fixes.
Files:	    src/channel.c, src/crypt.c, src/edit.c, src/regexp.h, src/tag.c,
            src/term.c, src/terminal.c, src/userfunc.c, src/installman.sh


*** ../vim-8.1.1193/src/channel.c	2019-04-12 21:19:01.265386241 +0200
--- src/channel.c	2019-04-16 00:01:18.616222855 +0200
***************
*** 1906,1912 ****
  
      if (prepend)
      {
! 	/* preend node to the head of the queue */
  	node->rq_next = head->rq_next;
  	node->rq_prev = NULL;
  	if (head->rq_next == NULL)
--- 1906,1912 ----
  
      if (prepend)
      {
! 	// prepend node to the head of the queue
  	node->rq_next = head->rq_next;
  	node->rq_prev = NULL;
  	if (head->rq_next == NULL)
***************
*** 1917,1923 ****
      }
      else
      {
! 	/* append node to the tail of the queue */
  	node->rq_next = NULL;
  	node->rq_prev = head->rq_prev;
  	if (head->rq_prev == NULL)
--- 1917,1923 ----
      }
      else
      {
! 	// append node to the tail of the queue
  	node->rq_next = NULL;
  	node->rq_prev = head->rq_prev;
  	if (head->rq_prev == NULL)
*** ../vim-8.1.1193/src/crypt.c	2019-03-02 10:13:36.788974890 +0100
--- src/crypt.c	2019-03-02 18:30:41.308111802 +0100
***************
*** 42,48 ****
      /* Optional function pointer for a self-test. */
      int (* self_test_fn)();
  
!     // Function pointer for initializing encryption/description.
      void (* init_fn)(cryptstate_T *state, char_u *key,
  		      char_u *salt, int salt_len, char_u *seed, int seed_len);
  
--- 42,48 ----
      /* Optional function pointer for a self-test. */
      int (* self_test_fn)();
  
!     // Function pointer for initializing encryption/decryption.
      void (* init_fn)(cryptstate_T *state, char_u *key,
  		      char_u *salt, int salt_len, char_u *seed, int seed_len);
  
*** ../vim-8.1.1193/src/edit.c	2019-04-20 15:10:06.382607095 +0200
--- src/edit.c	2019-04-20 15:52:26.195775374 +0200
***************
*** 4558,4567 ****
  	/* Re-enable bracketed paste mode. */
  	out_str(T_BE);
  
!     /*
!      * When recording or for CTRL-O, need to display the new mode.
!      * Otherwise remove the mode message.
!      */
      if (reg_recording != 0 || restart_edit != NUL)
  	showmode();
      else if (p_smd && (got_int || !skip_showmode()))
--- 4558,4565 ----
  	/* Re-enable bracketed paste mode. */
  	out_str(T_BE);
  
!     // When recording or for CTRL-O, need to display the new mode.
!     // Otherwise remove the mode message.
      if (reg_recording != 0 || restart_edit != NUL)
  	showmode();
      else if (p_smd && (got_int || !skip_showmode()))
*** ../vim-8.1.1193/src/regexp.h	2018-07-17 05:43:50.483214748 +0200
--- src/regexp.h	2019-02-18 22:23:01.266862344 +0100
***************
*** 81,87 ****
  
  /*
   * Structure representing a NFA state.
!  * A NFA state may have no outgoing edge, when it is a NFA_MATCH state.
   */
  typedef struct nfa_state nfa_state_T;
  struct nfa_state
--- 81,87 ----
  
  /*
   * Structure representing a NFA state.
!  * An NFA state may have no outgoing edge, when it is a NFA_MATCH state.
   */
  typedef struct nfa_state nfa_state_T;
  struct nfa_state
*** ../vim-8.1.1193/src/tag.c	2019-04-02 21:25:58.350360150 +0200
--- src/tag.c	2019-04-11 12:15:00.840680975 +0200
***************
*** 2368,2376 ****
  		     * Don't add identical matches.
  		     * Add all cscope tags, because they are all listed.
  		     * "mfp" is used as a hash key, there is a NUL byte to end
! 		     * the part matters for comparing, more bytes may follow
! 		     * after it.  E.g. help tags store the priority after the
! 		     * NUL.
  		     */
  #ifdef FEAT_CSCOPE
  		    if (use_cscope)
--- 2368,2376 ----
  		     * Don't add identical matches.
  		     * Add all cscope tags, because they are all listed.
  		     * "mfp" is used as a hash key, there is a NUL byte to end
! 		     * the part that matters for comparing, more bytes may
! 		     * follow after it.  E.g. help tags store the priority
! 		     * after the NUL.
  		     */
  #ifdef FEAT_CSCOPE
  		    if (use_cscope)
*** ../vim-8.1.1193/src/term.c	2019-04-06 20:00:15.433129920 +0200
--- src/term.c	2019-04-20 23:54:27.456223087 +0200
***************
*** 21,28 ****
   * (char **). This define removes that prototype. We include our own prototype
   * below.
   */
- 
  #define tgetstr tgetstr_defined_wrong
  #include "vim.h"
  
  #ifdef HAVE_TGETENT
--- 21,28 ----
   * (char **). This define removes that prototype. We include our own prototype
   * below.
   */
  #define tgetstr tgetstr_defined_wrong
+ 
  #include "vim.h"
  
  #ifdef HAVE_TGETENT
*** ../vim-8.1.1193/src/terminal.c	2019-04-17 18:24:32.006143206 +0200
--- src/terminal.c	2019-04-17 18:21:16.650917924 +0200
***************
*** 5671,5679 ****
  typedef int HPCON;
  typedef int HRESULT;
  typedef int LPPROC_THREAD_ATTRIBUTE_LIST;
  typedef int PSIZE_T;
  typedef int PVOID;
- typedef int SIZE_T;
  typedef int WINAPI;
  #endif
  
--- 5671,5679 ----
  typedef int HPCON;
  typedef int HRESULT;
  typedef int LPPROC_THREAD_ATTRIBUTE_LIST;
+ typedef int SIZE_T;
  typedef int PSIZE_T;
  typedef int PVOID;
  typedef int WINAPI;
  #endif
  
*** ../vim-8.1.1193/src/userfunc.c	2019-03-14 13:42:57.169435481 +0100
--- src/userfunc.c	2019-04-04 16:39:12.853059784 +0200
***************
*** 508,514 ****
  		*error = ERROR_SCRIPT;
  	    else
  	    {
! 		sprintf((char *)fname_buf + 3, "%ld_", (long)current_sctx.sc_sid);
  		i = (int)STRLEN(fname_buf);
  	    }
  	}
--- 508,515 ----
  		*error = ERROR_SCRIPT;
  	    else
  	    {
! 		sprintf((char *)fname_buf + 3, "%ld_",
! 						    (long)current_sctx.sc_sid);
  		i = (int)STRLEN(fname_buf);
  	    }
  	}
*** ../vim-8.1.1193/src/installman.sh	2018-07-28 18:16:44.285662961 +0200
--- src/installman.sh	2019-03-07 12:24:01.775278118 +0100
***************
*** 6,12 ****
  # 2  target directory			   e.g., "/usr/local/man/it/man1"
  # 3  language addition			   e.g., "" or "-it"
  # 4  vim location as used in manual pages  e.g., "/usr/local/share/vim"
! # 5  runtime dir for menu.vim et al.	   e.g., "/usr/local/share/vim/vim70"
  # 6  runtime dir for global vimrc file	   e.g., "/usr/local/share/vim"
  # 7  source dir for help files		   e.g., "../runtime/doc"
  # 8  mode bits for manpages		   e.g., "644"
--- 6,12 ----
  # 2  target directory			   e.g., "/usr/local/man/it/man1"
  # 3  language addition			   e.g., "" or "-it"
  # 4  vim location as used in manual pages  e.g., "/usr/local/share/vim"
! # 5  runtime dir for menu.vim et al.	   e.g., "/usr/local/share/vim/vim81"
  # 6  runtime dir for global vimrc file	   e.g., "/usr/local/share/vim"
  # 7  source dir for help files		   e.g., "../runtime/doc"
  # 8  mode bits for manpages		   e.g., "644"
*** ../vim-8.1.1193/src/version.c	2019-04-20 23:47:42.518391308 +0200
--- src/version.c	2019-04-20 23:51:41.749119882 +0200
***************
*** 773,774 ****
--- 773,776 ----
  {   /* Add new patch number below this line */
+ /**/
+     1194,
  /**/

-- 
FATHER: One day, lad, all this will be yours ...
PRINCE: What - the curtains?
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
