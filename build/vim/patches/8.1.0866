To: vim_dev@googlegroups.com
Subject: Patch 8.1.0866
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.0866
Problem:    Build file dependencies are outdated. (John Little)
Solution:   Run "make proto" and "make depend".
Files:	    src/vim.h, src/Makefile, src/proto/sign.pro, src/proto/gui_w32.pro


*** ../vim-8.1.0865/src/vim.h	2019-01-26 17:28:22.236599060 +0100
--- src/vim.h	2019-02-01 20:36:26.552116786 +0100
***************
*** 260,274 ****
  # define SUN_SYSTEM
  #endif
  
! /* if we're compiling in C++ (currently only KVim), the system
   * headers must have the correct prototypes or nothing will build.
!  * conversely, our prototypes might clash due to throw() specifiers and
   * cause compilation failures even though the headers are correct.  For
   * a concrete example, gcc-3.2 enforces exception specifications, and
   * glibc-2.2.5 has them in their system headers.
   */
  #if !defined(__cplusplus) && defined(UNIX) \
!   && !defined(MACOS_X) /* MACOS_X doesn't yet support osdef.h */
  # include "auto/osdef.h"	/* bring missing declarations in */
  #endif
  
--- 260,274 ----
  # define SUN_SYSTEM
  #endif
  
! /* If we're compiling in C++ (currently only KVim), the system
   * headers must have the correct prototypes or nothing will build.
!  * Conversely, our prototypes might clash due to throw() specifiers and
   * cause compilation failures even though the headers are correct.  For
   * a concrete example, gcc-3.2 enforces exception specifications, and
   * glibc-2.2.5 has them in their system headers.
   */
  #if !defined(__cplusplus) && defined(UNIX) \
! 	&& !defined(MACOS_X) /* MACOS_X doesn't yet support osdef.h */
  # include "auto/osdef.h"	/* bring missing declarations in */
  #endif
  
***************
*** 2583,2588 ****
--- 2583,2591 ----
  # define ELAPSED_TICKCOUNT
  # define ELAPSED_INIT(v) v = GetTickCount()
  # define ELAPSED_FUNC(v) elapsed(v)
+ # ifdef PROTO
+ typedef int DWORD;
+ # endif
  typedef DWORD elapsed_T;
  # ifndef PROTO
  long elapsed(DWORD start_tick);
*** ../vim-8.1.0865/src/Makefile	2019-01-31 13:47:51.118632672 +0100
--- src/Makefile	2019-02-01 20:40:07.706429668 +0100
***************
*** 610,615 ****
--- 607,614 ----
  #CFLAGS = -g -O2 '-DSTARTUPTIME="vimstartup"' -fno-strength-reduce -Wall -Wmissing-prototypes
  
  # Use this with GCC to check for mistakes, unused arguments, etc.
+ # Note: If you use -Wextra and get warnings in GTK code about function
+ #       parameters, you can add -Wno-cast-function-type
  #CFLAGS = -g -Wall -Wextra -Wshadow -Wmissing-prototypes -Wunreachable-code -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1
  # Add -Wpedantic to find // comments and other C99 constructs.
  # Better disable Perl and Python to avoid a lot of warnings.
***************
*** 3388,3397 ****
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
   proto.h globals.h farsi.h arabic.h
! objects/autocmd.o: autocmd.c vim.h protodef.h auto/config.h feature.h \
!  auto/osdef.h os_unix.h os_mac.h ascii.h keymap.h term.h macros.h option.h beval.h \
!  structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h proto.h globals.h \
!  farsi.h arabic.h
  objects/beval.o: beval.c vim.h protodef.h auto/config.h feature.h os_unix.h \
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
--- 3387,3396 ----
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
   proto.h globals.h farsi.h arabic.h
! objects/autocmd.o: autocmd.c vim.h protodef.h auto/config.h feature.h os_unix.h \
!  auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
!  proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
!  proto.h globals.h farsi.h arabic.h
  objects/beval.o: beval.c vim.h protodef.h auto/config.h feature.h os_unix.h \
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
***************
*** 3497,3505 ****
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
   proto.h globals.h farsi.h arabic.h version.h
  objects/indent.o: indent.c vim.h protodef.h auto/config.h feature.h os_unix.h \
!   os_mac.h ascii.h keymap.h term.h macros.h option.h beval.h structs.h \
!   regexp.h gui.h alloc.h ex_cmds.h spell.h proto.h globals.h farsi.h \
!   arabic.h
  objects/json.o: json.c vim.h protodef.h auto/config.h feature.h os_unix.h \
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
--- 3496,3504 ----
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
   proto.h globals.h farsi.h arabic.h version.h
  objects/indent.o: indent.c vim.h protodef.h auto/config.h feature.h os_unix.h \
!  auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
!  proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
!  proto.h globals.h farsi.h arabic.h
  objects/json.o: json.c vim.h protodef.h auto/config.h feature.h os_unix.h \
   auto/osdef.h ascii.h keymap.h term.h macros.h option.h beval.h \
   proto/gui_beval.pro structs.h regexp.h gui.h alloc.h ex_cmds.h spell.h \
*** ../vim-8.1.0865/src/proto/sign.pro	2019-01-11 13:42:31.680331155 +0100
--- src/proto/sign.pro	2019-02-01 20:36:49.411609270 +0100
***************
*** 11,18 ****
  int sign_define_by_name(char_u *name, char_u *icon, char_u *linehl, char_u *text, char_u *texthl);
  int sign_undefine_by_name(char_u *name);
  int sign_place(int *sign_id, char_u *sign_group, char_u *sign_name, buf_T *buf, linenr_T lnum, int prio);
- linenr_T sign_jump(int sign_id, char_u *sign_group, buf_T *buf);
  int sign_unplace(int sign_id, char_u *sign_group, buf_T *buf, linenr_T atlnum);
  void ex_sign(exarg_T *eap);
  void sign_getlist(char_u *name, list_T *retlist);
  void get_buffer_signs(buf_T *buf, list_T *l);
--- 11,18 ----
  int sign_define_by_name(char_u *name, char_u *icon, char_u *linehl, char_u *text, char_u *texthl);
  int sign_undefine_by_name(char_u *name);
  int sign_place(int *sign_id, char_u *sign_group, char_u *sign_name, buf_T *buf, linenr_T lnum, int prio);
  int sign_unplace(int sign_id, char_u *sign_group, buf_T *buf, linenr_T atlnum);
+ linenr_T sign_jump(int sign_id, char_u *sign_group, buf_T *buf);
  void ex_sign(exarg_T *eap);
  void sign_getlist(char_u *name, list_T *retlist);
  void get_buffer_signs(buf_T *buf, list_T *l);
***************
*** 24,26 ****
--- 24,27 ----
  void free_signs(void);
  char_u *get_sign_name(expand_T *xp, int idx);
  void set_context_in_sign_cmd(expand_T *xp, char_u *arg);
+ /* vim: set ft=c : */
*** ../vim-8.1.0865/src/proto/gui_w32.pro	2019-01-19 19:54:17.141981393 +0100
--- src/proto/gui_w32.pro	2019-02-01 20:36:55.523518573 +0100
***************
*** 58,65 ****
  void gui_mch_newfont(void);
  void gui_mch_settitle(char_u *title, char_u *icon);
  void mch_set_mouse_shape(int shape);
- char_u *gui_mch_browsedir(char_u *title, char_u *initdir);
  char_u *gui_mch_browse(int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter);
  int get_cmd_args(char *prog, char *cmdline, char ***argvp, char **tofree);
  void gui_mch_set_parent(char *title);
  void gui_mch_prepare(int *argc, char **argv);
--- 58,65 ----
  void gui_mch_newfont(void);
  void gui_mch_settitle(char_u *title, char_u *icon);
  void mch_set_mouse_shape(int shape);
  char_u *gui_mch_browse(int saving, char_u *title, char_u *dflt, char_u *ext, char_u *initdir, char_u *filter);
+ char_u *gui_mch_browsedir(char_u *title, char_u *initdir);
  int get_cmd_args(char *prog, char *cmdline, char ***argvp, char **tofree);
  void gui_mch_set_parent(char *title);
  void gui_mch_prepare(int *argc, char **argv);
*** ../vim-8.1.0865/src/version.c	2019-01-31 21:57:15.517462657 +0100
--- src/version.c	2019-02-01 20:40:28.291120595 +0100
***************
*** 785,786 ****
--- 785,788 ----
  {   /* Add new patch number below this line */
+ /**/
+     866,
  /**/

-- 
ARTHUR:   Ni!
BEDEVERE: Nu!
ARTHUR:   No.  Ni!  More like this. "Ni"!
BEDEVERE: Ni, ni, ni!
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
