To: vim_dev@googlegroups.com
Subject: Patch 8.1.1193
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1193
Problem:    Typos and small problems in test files.
Solution:   Small improvements.
Files:	    src/testdir/test_gn.vim, src/testdir/test_quotestar.vim,
            src/testdir/test_registers.vim, src/testdir/test_syntax.vim,
            src/testdir/test_tabpage.vim, src/testdir/test_vartabs.vim


*** ../vim-8.1.1192/src/testdir/test_gn.vim	2018-12-23 19:10:05.002359965 +0100
--- src/testdir/test_gn.vim	2019-01-27 20:54:51.874432967 +0100
***************
*** 2,8 ****
  
  func Test_gn_command()
    noautocmd new
!   " replace a single char by itsself quoted:
    call setline('.', 'abc x def x ghi x jkl')
    let @/ = 'x'
    exe "norm! cgn'x'\<esc>.."
--- 2,8 ----
  
  func Test_gn_command()
    noautocmd new
!   " replace a single char by itself quoted:
    call setline('.', 'abc x def x ghi x jkl')
    let @/ = 'x'
    exe "norm! cgn'x'\<esc>.."
*** ../vim-8.1.1192/src/testdir/test_quotestar.vim	2018-04-30 14:27:41.000000000 +0200
--- src/testdir/test_quotestar.vim	2019-01-27 20:55:38.622096040 +0100
***************
*** 97,103 ****
    if has('unix') && has('gui') && !has('gui_running')
      let @* = ''
  
!     " Running in a terminal and the GUI is avaiable: Tell the server to open
      " the GUI and check that the remote command still works.
      " Need to wait for the GUI to start up, otherwise the send hangs in trying
      " to send to the terminal window.
--- 97,103 ----
    if has('unix') && has('gui') && !has('gui_running')
      let @* = ''
  
!     " Running in a terminal and the GUI is available: Tell the server to open
      " the GUI and check that the remote command still works.
      " Need to wait for the GUI to start up, otherwise the send hangs in trying
      " to send to the terminal window.
*** ../vim-8.1.1192/src/testdir/test_registers.vim	2019-03-11 08:05:02.199622735 +0100
--- src/testdir/test_registers.vim	2019-03-11 10:22:34.100756986 +0100
***************
*** 163,167 ****
--- 163,169 ----
    bwipe!
    if exists('save_F2')
      let t_F2 = save_F2
+   else
+     set t_F2=
    endif
  endfunc
*** ../vim-8.1.1192/src/testdir/test_syntax.vim	2018-12-02 14:55:04.904731741 +0100
--- src/testdir/test_syntax.vim	2019-04-20 23:44:38.931339618 +0200
***************
*** 34,40 ****
  	\ 'CREATE TABLE FOOBAR(',
  	\ '    DLTD_BY VARCHAR2(100)',
  	\ ');',
!   	\ ''])
  
    syntax on
    set ft=sql
--- 34,40 ----
  	\ 'CREATE TABLE FOOBAR(',
  	\ '    DLTD_BY VARCHAR2(100)',
  	\ ');',
! 	\ ''])
  
    syntax on
    set ft=sql
***************
*** 519,525 ****
  
    norm f/
    call assert_equal(['cComment', 'cCommentStart'], map(synstack(line("."), col(".")), 'synIDattr(v:val, "name")'))
!   call assert_equal(['Comment', 'Comment'],        map(synstack(line("."), col(".")), 'synIDattr(synIDtrans(v:val), "name")'))
  
    norm fA
    call assert_equal(['cComment'], map(synstack(line("."), col(".")), 'synIDattr(v:val, "name")'))
--- 519,525 ----
  
    norm f/
    call assert_equal(['cComment', 'cCommentStart'], map(synstack(line("."), col(".")), 'synIDattr(v:val, "name")'))
!   call assert_equal(['Comment', 'Comment'],	   map(synstack(line("."), col(".")), 'synIDattr(synIDtrans(v:val), "name")'))
  
    norm fA
    call assert_equal(['cComment'], map(synstack(line("."), col(".")), 'synIDattr(v:val, "name")'))
*** ../vim-8.1.1192/src/testdir/test_tabpage.vim	2019-01-22 22:41:38.362850472 +0100
--- src/testdir/test_tabpage.vim	2019-01-27 20:55:54.469981869 +0100
***************
*** 140,148 ****
  
  " Test autocommands
  function Test_tabpage_with_autocmd()
-   if !has('autocmd')
-     return
-   endif
    command -nargs=1 -bar C :call add(s:li, '=== ' . <q-args> . ' ===')|<args>
    augroup TestTabpageGroup
      au!
--- 140,145 ----
*** ../vim-8.1.1192/src/testdir/test_vartabs.vim	2019-01-09 23:00:58.001176090 +0100
--- src/testdir/test_vartabs.vim	2019-04-20 23:47:31.210450516 +0200
***************
*** 5,10 ****
--- 5,11 ----
  endif
  
  source view_util.vim
+ 
  func s:compare_lines(expect, actual)
    call assert_equal(join(a:expect, "\n"), join(a:actual, "\n"))
  endfunc
***************
*** 372,374 ****
--- 373,381 ----
    call assert_fails('set vts=,8')
    call assert_fails('set vsts=,8')
  endfunc
+ 
+ func Test_vartabs_reset()
+   set vts=8
+   set all&
+   call assert_equal('', &vts)
+ endfunc
*** ../vim-8.1.1192/src/version.c	2019-04-20 23:38:02.189504258 +0200
--- src/version.c	2019-04-20 23:43:25.539709608 +0200
***************
*** 773,774 ****
--- 773,776 ----
  {   /* Add new patch number below this line */
+ /**/
+     1193,
  /**/

-- 
TALL KNIGHT: We shall say Ni! again to you if you do not appease us.
ARTHUR:      All right!  What do you want?
TALL KNIGHT: We want ... a shrubbery!
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
