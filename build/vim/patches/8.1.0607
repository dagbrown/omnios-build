To: vim_dev@googlegroups.com
Subject: Patch 8.1.0607
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.0607
Problem:    Proto files are not in sync with the source code.
Solution:   Update the proto files.
Files:	    src/os_mswin.c, src/proto/buffer.pro, src/proto/ex_cmds.pro,
            src/proto/ex_getln.pro, src/proto/misc2.pro,
            src/proto/userfunc.pro


*** ../vim-8.1.0606/src/os_mswin.c	2018-10-07 22:47:03.629199894 +0200
--- src/os_mswin.c	2018-12-18 21:53:01.214508779 +0100
***************
*** 114,119 ****
--- 114,120 ----
  typedef int TEXTMETRIC;
  typedef int UINT;
  typedef int WCHAR;
+ typedef int WNDENUMPROC;
  typedef int WORD;
  typedef int WPARAM;
  typedef void VOID;
*** ../vim-8.1.0606/src/proto/buffer.pro	2018-08-01 17:53:04.689381294 +0200
--- src/proto/buffer.pro	2018-12-18 21:53:41.878141278 +0100
***************
*** 16,22 ****
  void no_write_message(void);
  void no_write_message_nobang(buf_T *buf);
  int curbuf_reusable(void);
! buf_T *buflist_new(char_u *ffname, char_u *sfname, linenr_T lnum, int flags);
  void free_buf_options(buf_T *buf, int free_p_ff);
  int buflist_getfile(int n, linenr_T lnum, int options, int forceit);
  void buflist_getfpos(void);
--- 16,22 ----
  void no_write_message(void);
  void no_write_message_nobang(buf_T *buf);
  int curbuf_reusable(void);
! buf_T *buflist_new(char_u *ffname_arg, char_u *sfname_arg, linenr_T lnum, int flags);
  void free_buf_options(buf_T *buf, int free_p_ff);
  int buflist_getfile(int n, linenr_T lnum, int options, int forceit);
  void buflist_getfpos(void);
***************
*** 31,37 ****
  linenr_T buflist_findlnum(buf_T *buf);
  void buflist_list(exarg_T *eap);
  int buflist_name_nr(int fnum, char_u **fname, linenr_T *lnum);
! int setfname(buf_T *buf, char_u *ffname, char_u *sfname, int message);
  void buf_set_name(int fnum, char_u *name);
  void buf_name_changed(buf_T *buf);
  buf_T *setaltfname(char_u *ffname, char_u *sfname, linenr_T lnum);
--- 31,37 ----
  linenr_T buflist_findlnum(buf_T *buf);
  void buflist_list(exarg_T *eap);
  int buflist_name_nr(int fnum, char_u **fname, linenr_T *lnum);
! int setfname(buf_T *buf, char_u *ffname_arg, char_u *sfname_arg, int message);
  void buf_set_name(int fnum, char_u *name);
  void buf_name_changed(buf_T *buf);
  buf_T *setaltfname(char_u *ffname, char_u *sfname, linenr_T lnum);
*** ../vim-8.1.0606/src/proto/ex_cmds.pro	2018-05-17 13:52:33.000000000 +0200
--- src/proto/ex_cmds.pro	2018-12-18 21:53:44.294116258 +0100
***************
*** 30,36 ****
  void ex_wnext(exarg_T *eap);
  void do_wqall(exarg_T *eap);
  int not_writing(void);
! int getfile(int fnum, char_u *ffname, char_u *sfname, int setpm, linenr_T lnum, int forceit);
  int do_ecmd(int fnum, char_u *ffname, char_u *sfname, exarg_T *eap, linenr_T newlnum, int flags, win_T *oldwin);
  void ex_append(exarg_T *eap);
  void ex_change(exarg_T *eap);
--- 30,36 ----
  void ex_wnext(exarg_T *eap);
  void do_wqall(exarg_T *eap);
  int not_writing(void);
! int getfile(int fnum, char_u *ffname_arg, char_u *sfname_arg, int setpm, linenr_T lnum, int forceit);
  int do_ecmd(int fnum, char_u *ffname, char_u *sfname, exarg_T *eap, linenr_T newlnum, int flags, win_T *oldwin);
  void ex_append(exarg_T *eap);
  void ex_change(exarg_T *eap);
*** ../vim-8.1.0606/src/proto/ex_getln.pro	2018-09-30 17:11:45.301650017 +0200
--- src/proto/ex_getln.pro	2018-12-18 21:53:45.258106280 +0100
***************
*** 1,4 ****
--- 1,5 ----
  /* ex_getln.c */
+ void cmdline_init(void);
  char_u *getcmdline(int firstc, long count, int indent);
  char_u *getcmdline_prompt(int firstc, char_u *prompt, int attr, int xp_context, char_u *xp_arg);
  int text_locked(void);
***************
*** 52,58 ****
  int read_viminfo_history(vir_T *virp, int writing);
  void handle_viminfo_history(garray_T *values, int writing);
  void finish_viminfo_history(vir_T *virp);
- void cmdline_init(void);
  void write_viminfo_history(FILE *fp, int merge);
  void cmd_pchar(int c, int offset);
  int cmd_gchar(int offset);
--- 53,58 ----
*** ../vim-8.1.0606/src/proto/misc2.pro	2018-11-11 15:20:32.436704418 +0100
--- src/proto/misc2.pro	2018-12-18 21:53:51.330043518 +0100
***************
*** 20,27 ****
  void adjust_cursor_col(void);
  int leftcol_changed(void);
  void vim_mem_profile_dump(void);
- char_u *alloc(unsigned size);
  int alloc_does_fail(long_u size);
  char_u *alloc_id(unsigned size, alloc_id_T id);
  char_u *alloc_clear(unsigned size);
  char_u *alloc_check(unsigned size);
--- 20,27 ----
  void adjust_cursor_col(void);
  int leftcol_changed(void);
  void vim_mem_profile_dump(void);
  int alloc_does_fail(long_u size);
+ char_u *alloc(unsigned size);
  char_u *alloc_id(unsigned size, alloc_id_T id);
  char_u *alloc_clear(unsigned size);
  char_u *alloc_check(unsigned size);
*** ../vim-8.1.0606/src/proto/userfunc.pro	2018-10-14 21:40:57.352848455 +0200
--- src/proto/userfunc.pro	2018-12-18 21:53:56.969985341 +0100
***************
*** 4,9 ****
--- 4,11 ----
  char_u *deref_func_name(char_u *name, int *lenp, partial_T **partialp, int no_autoload);
  int get_func_tv(char_u *name, int len, typval_T *rettv, char_u **arg, linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, partial_T *partial, dict_T *selfdict);
  ufunc_T *find_func(char_u *name);
+ void save_funccal(funccal_entry_T *entry);
+ void restore_funccal(void);
  void free_all_functions(void);
  int func_call(char_u *name, typval_T *args, partial_T *partial, dict_T *selfdict, typval_T *rettv);
  int call_func(char_u *funcname, int len, typval_T *rettv, int argcount_in, typval_T *argvars_in, int (*argv_func)(int, typval_T *, int), linenr_T firstline, linenr_T lastline, int *doesrange, int evaluate, partial_T *partial, dict_T *selfdict_in);
***************
*** 39,46 ****
  int *func_dbg_tick(void *cookie);
  int func_level(void *cookie);
  int current_func_returned(void);
- void save_funccal(funccal_entry_T *entry);
- void restore_funccal(void);
  int free_unref_funccal(int copyID, int testing);
  hashtab_T *get_funccal_local_ht(void);
  dictitem_T *get_funccal_local_var(void);
--- 41,46 ----
*** ../vim-8.1.0606/src/version.c	2018-12-16 18:19:56.142140712 +0100
--- src/version.c	2018-12-18 21:55:37.112970736 +0100
***************
*** 801,802 ****
--- 801,804 ----
  {   /* Add new patch number below this line */
+ /**/
+     607,
  /**/

-- 
"So this is it," said Arthur, "we are going to die."
"Yes," said Ford, "except...no!  Wait a minute!"  He suddenly lunged across
the chamber at something behind Arthur's line of vision.  "What's this
switch?" he cried.
"What?   Where?" cried Arthur, twisting around.
"No, I was only fooling," said Ford, "we are going to die after all."
		-- Douglas Adams, "The Hitchhiker's Guide to the Galaxy"

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
