To: vim_dev@googlegroups.com
Subject: Patch 8.1.1632
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1632
Problem:    Build with EXITFREE but without +arabic fails.
Solution:   Rename the function and adjust #ifdefs. (closes #4613)
Files:	    src/ex_getln.c, src/proto/ex_getln.pro, src/misc2.c


*** ../vim-8.1.1631/src/ex_getln.c	2019-06-25 04:12:12.308665266 +0200
--- src/ex_getln.c	2019-07-04 19:36:55.309508157 +0200
***************
*** 3174,3180 ****
  
  # if defined(EXITFREE) || defined(PROTO)
      void
! free_cmdline_buf(void)
  {
      vim_free(arshape_buf);
  }
--- 3174,3180 ----
  
  # if defined(EXITFREE) || defined(PROTO)
      void
! free_arshape_buf(void)
  {
      vim_free(arshape_buf);
  }
*** ../vim-8.1.1631/src/proto/ex_getln.pro	2019-06-25 04:12:12.312665250 +0200
--- src/proto/ex_getln.pro	2019-07-04 20:22:53.831725158 +0200
***************
*** 12,18 ****
  int cmdline_overstrike(void);
  int cmdline_at_end(void);
  colnr_T cmdline_getvcol_cursor(void);
! void free_cmdline_buf(void);
  void putcmdline(int c, int shift);
  void unputcmdline(void);
  int put_on_cmdline(char_u *str, int len, int redraw);
--- 12,18 ----
  int cmdline_overstrike(void);
  int cmdline_at_end(void);
  colnr_T cmdline_getvcol_cursor(void);
! void free_arshape_buf(void);
  void putcmdline(int c, int shift);
  void unputcmdline(void);
  int put_on_cmdline(char_u *str, int len, int redraw);
*** ../vim-8.1.1631/src/misc2.c	2019-07-04 17:35:01.119169967 +0200
--- src/misc2.c	2019-07-04 19:50:05.324109659 +0200
***************
*** 1060,1066 ****
      spell_free_all();
  # endif
  
! #if defined(FEAT_INS_EXPAND) && defined(FEAT_BEVAL_TERM)
      ui_remove_balloon();
  # endif
  
--- 1060,1066 ----
      spell_free_all();
  # endif
  
! # if defined(FEAT_INS_EXPAND) && defined(FEAT_BEVAL_TERM)
      ui_remove_balloon();
  # endif
  
***************
*** 1092,1098 ****
  # endif
  # if defined(FEAT_KEYMAP)
  	do_cmdline_cmd((char_u *)"set keymap=");
! #endif
      }
  
  # ifdef FEAT_TITLE
--- 1092,1098 ----
  # endif
  # if defined(FEAT_KEYMAP)
  	do_cmdline_cmd((char_u *)"set keymap=");
! # endif
      }
  
  # ifdef FEAT_TITLE
***************
*** 1149,1159 ****
  # ifdef FEAT_CMDHIST
      init_history();
  # endif
! #ifdef FEAT_TEXT_PROP
      clear_global_prop_types();
! #endif
  
! #ifdef FEAT_QUICKFIX
      {
  	win_T	    *win;
  	tabpage_T   *tab;
--- 1149,1159 ----
  # ifdef FEAT_CMDHIST
      init_history();
  # endif
! # ifdef FEAT_TEXT_PROP
      clear_global_prop_types();
! # endif
  
! # ifdef FEAT_QUICKFIX
      {
  	win_T	    *win;
  	tabpage_T   *tab;
***************
*** 1163,1169 ****
  	FOR_ALL_TAB_WINDOWS(tab, win)
  	    qf_free_all(win);
      }
! #endif
  
      // Close all script inputs.
      close_all_scripts();
--- 1163,1169 ----
  	FOR_ALL_TAB_WINDOWS(tab, win)
  	    qf_free_all(win);
      }
! # endif
  
      // Close all script inputs.
      close_all_scripts();
***************
*** 1177,1185 ****
  
      /* Free all buffers.  Reset 'autochdir' to avoid accessing things that
       * were freed already. */
! #ifdef FEAT_AUTOCHDIR
      p_acd = FALSE;
! #endif
      for (buf = firstbuf; buf != NULL; )
      {
  	bufref_T    bufref;
--- 1177,1185 ----
  
      /* Free all buffers.  Reset 'autochdir' to avoid accessing things that
       * were freed already. */
! # ifdef FEAT_AUTOCHDIR
      p_acd = FALSE;
! # endif
      for (buf = firstbuf; buf != NULL; )
      {
  	bufref_T    bufref;
***************
*** 1193,1199 ****
  	    buf = firstbuf;
      }
  
!     free_cmdline_buf();
  
      /* Clear registers. */
      clear_registers();
--- 1193,1201 ----
  	    buf = firstbuf;
      }
  
! # ifdef FEAT_ARABIC
!     free_arshape_buf();
! # endif
  
      /* Clear registers. */
      clear_registers();
*** ../vim-8.1.1631/src/version.c	2019-07-04 18:28:31.609084867 +0200
--- src/version.c	2019-07-04 20:24:28.003112599 +0200
***************
*** 779,780 ****
--- 779,782 ----
  {   /* Add new patch number below this line */
+ /**/
+     1632,
  /**/

-- 
FIRST GUARD: Ah!  Now ... we're not allowed to ...
   SIR LAUNCELOT runs him through,  grabs his spear and stabs the other
   guard who collapses in a heap.  Hiccoughs quietly.
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
