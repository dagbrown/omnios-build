To: vim_dev@googlegroups.com
Subject: Patch 8.1.1325
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1325
Problem:    Cannot build with +eval but without +channel and +timers. (John
            Marriott)
Solution:   Adjust #ifdef for get_callback().
Files:	    src/evalfunc.c, src/testdir/test_autocmd.vim


*** ../vim-8.1.1324/src/evalfunc.c	2019-05-11 21:14:02.336269566 +0200
--- src/evalfunc.c	2019-05-12 12:55:16.923057519 +0200
***************
*** 14675,14681 ****
      time_for_testing = (time_t)tv_get_number(&argvars[0]);
  }
  
- #if defined(FEAT_JOB_CHANNEL) || defined(FEAT_TIMERS) || defined(PROTO)
  /*
   * Get a callback from "arg".  It can be a Funcref or a function name.
   * When "arg" is zero return an empty string.
--- 14675,14680 ----
***************
*** 14716,14722 ****
  	vim_free(callback);
      }
  }
- #endif
  
  #ifdef FEAT_TIMERS
  /*
--- 14715,14720 ----
*** ../vim-8.1.1324/src/testdir/test_autocmd.vim	2019-05-09 21:38:39.775896532 +0200
--- src/testdir/test_autocmd.vim	2019-05-12 13:01:53.936901390 +0200
***************
*** 18,23 ****
--- 18,24 ----
  endfunc
  
  if has('timers')
+ 
    func ExitInsertMode(id)
      call feedkeys("\<Esc>")
    endfunc
***************
*** 70,76 ****
      au! CursorHoldI
      set updatetime&
    endfunc
! endif
  
  func Test_bufunload()
    augroup test_bufunload_group
--- 71,100 ----
      au! CursorHoldI
      set updatetime&
    endfunc
! 
!   func Test_OptionSet_modeline()
!     call test_override('starting', 1)
!     au! OptionSet
!     augroup set_tabstop
!       au OptionSet tabstop call timer_start(1, {-> execute("echo 'Handler called'", "")})
!     augroup END
!     call writefile(['vim: set ts=7 sw=5 :', 'something'], 'XoptionsetModeline')
!     set modeline
!     let v:errmsg = ''
!     call assert_fails('split XoptionsetModeline', 'E12:')
!     call assert_equal(7, &ts)
!     call assert_equal('', v:errmsg)
! 
!     augroup set_tabstop
!       au!
!     augroup END
!     bwipe!
!     set ts&
!     call delete('XoptionsetModeline')
!     call test_override('starting', 0)
!   endfunc
! 
! endif "has('timers')
  
  func Test_bufunload()
    augroup test_bufunload_group
***************
*** 673,700 ****
    "delfunc! AutoCommandOptionSet
  endfunc
  
- func Test_OptionSet_modeline()
-   call test_override('starting', 1)
-   au! OptionSet
-   augroup set_tabstop
-     au OptionSet tabstop call timer_start(1, {-> execute("echo 'Handler called'", "")})
-   augroup END
-   call writefile(['vim: set ts=7 sw=5 :', 'something'], 'XoptionsetModeline')
-   set modeline
-   let v:errmsg = ''
-   call assert_fails('split XoptionsetModeline', 'E12:')
-   call assert_equal(7, &ts)
-   call assert_equal('', v:errmsg)
- 
-   augroup set_tabstop
-     au!
-   augroup END
-   bwipe!
-   set ts&
-   call delete('XoptionsetModeline')
-   call test_override('starting', 0)
- endfunc
- 
  " Test for Bufleave autocommand that deletes the buffer we are about to edit.
  func Test_BufleaveWithDelete()
    new | edit Xfile1
--- 697,702 ----
*** ../vim-8.1.1324/src/version.c	2019-05-11 21:50:03.945292930 +0200
--- src/version.c	2019-05-12 12:56:10.478765509 +0200
***************
*** 769,770 ****
--- 769,772 ----
  {   /* Add new patch number below this line */
+ /**/
+     1325,
  /**/

-- 
SOLDIER: What? A swallow carrying a coconut?
ARTHUR:  It could grip it by the husk ...
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
