To: vim_dev@googlegroups.com
Subject: Patch 8.1.1688
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1688
Problem:    Old makefiles are no longer useful.
Solution:   Delete the makefiles, they most likely don't work anyway.
Files:	    Filelist, src/Make_dice.mak, src/Make_manx.mak, src/Make_sas.mak


*** ../vim-8.1.1687/Filelist	2019-07-14 14:55:20.364881446 +0200
--- Filelist	2019-07-14 15:08:17.775861493 +0200
***************
*** 544,553 ****
  		README_amisrc.txt.info \
  		src.info \
  		src/INSTALLami.txt \
- 		src/Make_dice.mak \
- 		src/Make_manx.mak \
  		src/Make_morph.mak \
- 		src/Make_sas.mak \
  		src/os_amiga.c \
  		src/os_amiga.h \
  		src/proto/os_amiga.pro \
--- 544,550 ----
*** ../vim-8.1.1687/src/Make_dice.mak	2019-07-13 22:59:06.918076892 +0200
--- src/Make_dice.mak	1970-01-01 01:00:00.000000000 +0100
***************
*** 1,305 ****
- #
- # Makefile for VIM, using DICE 3
- #
- 
- #>>>>> choose options:
- ### See feature.h for a list of optionals.
- ### Any other defines can be included here.
- DEFINES = -DHAVE_TGETENT -DUP_BC_PC_EXTERN -DOSPEED_EXTERN
- 
- #>>>>> if HAVE_TGETENT is defined o/termlib.o has to be used
- TERMLIB = o/termlib.o
- #TERMLIB =
- 
- #>>>>> end of choices
- ###########################################################################
- 
- CFLAGS = -c -DAMIGA -Iproto $(DEFINES)
- 
- SYMS = vim.syms
- PRE = -H${SYMS}=vim.h
- LIBS = -la
- CC = dcc
- LD = dcc
- 
- .c.o:
- 	${CC} ${PRE} ${CFLAGS} $< -o $@
- 
- SRC = \
- 	arabic.c \
- 	autocmd.c \
- 	blowfish.c \
- 	buffer.c \
- 	change.c \
- 	charset.c \
- 	crypt.c \
- 	crypt_zip.c \
- 	debugger.c \
- 	dict.c \
- 	diff.c \
- 	digraph.c \
- 	edit.c \
- 	eval.c \
- 	evalfunc.c \
- 	ex_cmds.c \
- 	ex_cmds2.c \
- 	ex_docmd.c \
- 	ex_eval.c \
- 	ex_getln.c \
- 	fileio.c \
- 	findfile.c \
- 	fold.c \
- 	getchar.c \
- 	hardcopy.c \
- 	hashtab.c \
- 	indent.c \
- 	insexpand.c \
- 	json.c \
- 	list.c \
- 	main.c \
- 	mark.c \
- 	memfile.c \
- 	memline.c \
- 	menu.c \
- 	message.c \
- 	misc1.c \
- 	misc2.c \
- 	move.c \
- 	mbyte.c \
- 	normal.c \
- 	ops.c \
- 	option.c \
- 	os_amiga.c \
- 	popupmnu.c \
- 	profiler.c \
- 	quickfix.c \
- 	regexp.c \
- 	screen.c \
- 	search.c \
- 	sha256.c \
- 	sign.c \
- 	spell.c \
- 	spellfile.c \
- 	syntax.c \
- 	tag.c \
- 	term.c \
- 	ui.c \
- 	undo.c \
- 	usercmd.c \
- 	userfunc.c \
- 	window.c \
- 	version.c
- 
- OBJ =	o/arabic.o \
- 	o/autocmd.o \
- 	o/blowfish.o \
- 	o/buffer.o \
- 	o/change.o \
- 	o/charset.o \
- 	o/crypt.o \
- 	o/crypt_zip.o \
- 	o/debugger.o \
- 	o/dict.o \
- 	o/diff.o \
- 	o/digraph.o \
- 	o/edit.o \
- 	o/eval.o \
- 	o/evalfunc.o \
- 	o/ex_cmds.o \
- 	o/ex_cmds2.o \
- 	o/ex_docmd.o \
- 	o/ex_eval.o \
- 	o/ex_getln.o \
- 	o/fileio.o \
- 	o/findfile.o \
- 	o/fold.o \
- 	o/getchar.o \
- 	o/hardcopy.o \
- 	o/hashtab.o \
- 	o/indent.o \
- 	o/insexpand.o \
- 	o/json.o \
- 	o/list.o \
- 	o/main.o \
- 	o/mark.o \
- 	o/memfile.o \
- 	o/memline.o \
- 	o/menu.o \
- 	o/message.o \
- 	o/misc1.o \
- 	o/misc2.o \
- 	o/move.o \
- 	o/mbyte.o \
- 	o/normal.o \
- 	o/ops.o \
- 	o/option.o \
- 	o/os_amiga.o \
- 	o/popupmnu.o \
- 	o/profiler.o \
- 	o/quickfix.o \
- 	o/regexp.o \
- 	o/screen.o \
- 	o/search.o \
- 	o/sha256.o \
- 	o/sign.o \
- 	o/spell.o \
- 	o/spellfile.o \
- 	o/syntax.o \
- 	o/tag.o \
- 	o/term.o \
- 	o/ui.o \
- 	o/undo.o \
- 	o/usercmd.o \
- 	o/userfunc.o \
- 	o/window.o \
- 	$(TERMLIB)
- 
- Vim: $(OBJ) version.c version.h
- 	${CC} $(CFLAGS) version.c -o o/version.o
- 	${LD} -o Vim $(OBJ) o/version.o $(LIBS)
- 
- debug: $(OBJ) version.c version.h
- 	${CC} $(CFLAGS) version.c -o o/version.o
- 	${LD} -s -o Vim $(OBJ) o/version.o $(LIBS)
- 
- tags:
- 	csh -c ctags $(SRC) *.h
- 
- clean:
- 	delete o/*.o Vim $(SYMS)
- 
- $(SYMS)  : vim.h globals.h keymap.h macros.h ascii.h term.h os_amiga.h structs.h
- 	delete $(SYMS)
- 
- ###########################################################################
- 
- o/arabic.o:	arabic.c  $(SYMS)
- 
- o/autocmd.o:	autocmd.c  $(SYMS)
- 
- o/blowfish.o:	blowfish.c  $(SYMS)
- 
- o/buffer.o:	buffer.c  $(SYMS)
- 
- o/change.o:	change.c  $(SYMS)
- 
- o/charset.o:	charset.c  $(SYMS)
- 
- o/crypt.o:	crypt.c  $(SYMS)
- 
- o/crypt_zip.o:	crypt_zip.c  $(SYMS)
- 
- o/debugger.o:	debugger.c  $(SYMS)
- 
- o/dict.o:	dict.c	$(SYMS)
- 
- o/diff.o:	diff.c	$(SYMS)
- 
- o/digraph.o:	digraph.c  $(SYMS)
- 
- o/edit.o:	edit.c	$(SYMS)
- 
- o/eval.o:	eval.c  $(SYMS)
- 
- o/evalfunc.o:	evalfunc.c  $(SYMS)
- 
- o/ex_cmds.o:	ex_cmds.c  $(SYMS)
- 
- o/ex_cmds2.o:	ex_cmds2.c  $(SYMS)
- 
- o/ex_docmd.o:	ex_docmd.c  $(SYMS) ex_cmds.h
- 
- o/ex_eval.o:	ex_eval.c  $(SYMS) ex_cmds.h
- 
- o/ex_getln.o:	ex_getln.c  $(SYMS)
- 
- o/fileio.o:	fileio.c  $(SYMS)
- 
- o/findfile.o:	findfile.c  $(SYMS)
- 
- o/fold.o:	fold.c  $(SYMS)
- 
- o/getchar.o: getchar.c	$(SYMS)
- 
- o/hardcopy.o: hardcopy.c	$(SYMS)
- 
- o/hashtab.o: hashtab.c	$(SYMS)
- 
- o/indent.o:	indent.c  $(SYMS)
- 
- o/insexpand.o:	insexpand.c  $(SYMS)
- 
- o/json.o:	json.c  $(SYMS)
- 
- o/list.o:	list.c  $(SYMS)
- 
- o/main.o: main.c $(SYMS)
- 
- o/mark.o: mark.c	$(SYMS)
- 
- o/memfile.o:	memfile.c  $(SYMS)
- 
- o/memline.o:	memline.c  $(SYMS)
- 
- o/menu.o:	menu.c  $(SYMS)
- 
- o/message.o:	message.c  $(SYMS)
- 
- o/misc1.o:	misc1.c  $(SYMS)
- 
- o/misc2.o:	misc2.c  $(SYMS)
- 
- o/move.o:	move.c  $(SYMS)
- 
- o/mbyte.o:	mbyte.c  $(SYMS)
- 
- o/normal.o:	normal.c  $(SYMS)
- 
- o/ops.o:	ops.c  $(SYMS)
- 
- o/option.o:	option.c  $(SYMS)
- # Because of a bug in DC1 2.06.40, initialisation of unions does not
- # work correctly. dc1-21 is DC1 2.06.21 which does work.
- #	rename dc1-21 dc1
- 	${CC} ${CFLAGS} option.c -o o/option.o
- #	rename dc1 dc1-21
- 
- o/os_amiga.o:	os_amiga.c  $(SYMS) os_amiga.h
- 
- o/popupmnu.o:	popupmnu.c  $(SYMS)
- 
- o/profiler.o:	profiler.c  $(SYMS)
- 
- o/quickfix.o:	quickfix.c  $(SYMS)
- 
- o/regexp.o:	regexp.c  $(SYMS) regexp.h
- 
- o/screen.o:	screen.c  $(SYMS)
- 
- o/search.o:	search.c  $(SYMS) regexp.h
- 
- o/sha256.o:	sha256.c  $(SYMS)
- 
- o/sign.o:	sign.c  $(SYMS)
- 
- o/spell.o:	spell.c  $(SYMS) spell.h
- 
- o/spellfile.o:	spellfile.c  $(SYMS) spell.h
- 
- o/syntax.o:	syntax.c  $(SYMS)
- 
- o/tag.o:	tag.c  $(SYMS)
- 
- o/term.o:	term.c  $(SYMS) term.h
- 
- o/termlib.o:	termlib.c $(SYMS)
- 
- o/ui.o: 	ui.c	$(SYMS)
- 
- o/undo.o: 	undo.c	$(SYMS)
- 
- o/usercmd.o: 	usercmd.c  $(SYMS)
- 
- o/userfunc.o: 	userfunc.c  $(SYMS)
- 
- o/window.o: 	window.c  $(SYMS)
--- 0 ----
*** ../vim-8.1.1687/src/Make_manx.mak	2019-07-13 22:59:06.922076875 +0200
--- src/Make_manx.mak	1970-01-01 01:00:00.000000000 +0100
***************
*** 1,468 ****
- #
- # Makefile for VIM on the Amiga, using Aztec/Manx C 5.0 or later
- #
- # NOTE: THIS IS OLD AND PROBABLY NO LONGER WORKS.
- #
- # Note: Not all dependencies are included. This was done to avoid having
- #	to compile everything when a global variable or function is added.
- #	Careful when changing a global struct or variable!
- #
- 
- #>>>>> choose options:
- 
- ### See feature.h for a list of optionals.
- ### Any other defines can be included here.
- DEFINES =
- 
- #>>>>> if HAVE_TGETENT is defined obj/termlib.o has to be used
- #TERMLIB = obj/termlib.o
- TERMLIB =
- 
- #>>>>> choose between debugging (-bs) or optimizing (-so)
- OPTIONS = -so
- #OPTIONS = -bs
- 
- #>>>>> end of choices
- ###########################################################################
- 
- CFLAGS = $(OPTIONS) -wapruq -ps -qf -Iproto $(DEFINES) -DAMIGA
- 
- LIBS = -lc16
- SYMS = vim.syms
- CC = cc
- LN = ln
- LNFLAGS = +q
- SHELL = csh
- REN = $(SHELL) -c mv -f
- DEL = $(SHELL) -c rm -f
- 
- SRC =	arabic.c \
- 	autocmd.c \
- 	blowfish.c \
- 	buffer.c \
- 	change.c \
- 	charset.c \
- 	crypt.c \
- 	crypt_zip.c \
- 	debugger.c \
- 	dict.c \
- 	diff.c \
- 	digraph.c \
- 	edit.c \
- 	eval.c \
- 	evalfunc.c \
- 	ex_cmds.c \
- 	ex_cmds2.c \
- 	ex_docmd.c \
- 	ex_eval.c \
- 	ex_getln.c \
- 	fileio.c \
- 	findfile.c \
- 	fold.c \
- 	getchar.c \
- 	hardcopy.c \
- 	hashtab.c \
- 	indent.c \
- 	insexpand.c \
- 	json.c \
- 	list.c \
- 	main.c \
- 	mark.c \
- 	memfile.c \
- 	memline.c \
- 	menu.c \
- 	message.c \
- 	misc1.c \
- 	misc2.c \
- 	move.c \
- 	mbyte.c \
- 	normal.c \
- 	ops.c \
- 	option.c \
- 	os_amiga.c \
- 	popupmnu.c \
- 	profiler.c \
- 	quickfix.c \
- 	regexp.c \
- 	screen.c \
- 	search.c \
- 	sha256.c \
- 	sign.c \
- 	spell.c \
- 	spellfile.c \
- 	syntax.c \
- 	tag.c \
- 	term.c \
- 	ui.c \
- 	undo.c \
- 	usercmd.c \
- 	userfunc.c \
- 	window.c \
- 	version.c
- 
- INCL = vim.h feature.h keymap.h macros.h ascii.h term.h structs.h os_amiga.h
- 
- OBJ =	obj/arabic.o \
- 	obj/autocmd.o \
- 	obj/blowfish.o \
- 	obj/buffer.o \
- 	obj/change.o \
- 	obj/charset.o \
- 	obj/crypt.o \
- 	obj/crypt_zip.o \
- 	obj/debugger.o \
- 	obj/dict.o \
- 	obj/diff.o \
- 	obj/digraph.o \
- 	obj/edit.o \
- 	obj/eval.o \
- 	obj/evalfunc.o \
- 	obj/ex_cmds.o \
- 	obj/ex_cmds2.o \
- 	obj/ex_docmd.o \
- 	obj/ex_eval.o \
- 	obj/ex_getln.o \
- 	obj/fileio.o \
- 	obj/findfile.o \
- 	obj/fold.o \
- 	obj/getchar.o \
- 	obj/hardcopy.o \
- 	obj/hashtab.o \
- 	obj/indent.o \
- 	obj/insexpand.o \
- 	obj/json.o \
- 	obj/list.o \
- 	obj/main.o \
- 	obj/mark.o \
- 	obj/memfile.o \
- 	obj/memline.o \
- 	obj/menu.o \
- 	obj/message.o \
- 	obj/misc1.o \
- 	obj/misc2.o \
- 	obj/move.o \
- 	obj/mbyte.o \
- 	obj/normal.o \
- 	obj/ops.o \
- 	obj/option.o \
- 	obj/os_amiga.o \
- 	obj/popupmnu.o \
- 	obj/profiler.o \
- 	obj/quickfix.o \
- 	obj/regexp.o \
- 	obj/screen.o \
- 	obj/search.o \
- 	obj/sha256.o \
- 	obj/sign.o \
- 	obj/spell.o \
- 	obj/spellfile.o \
- 	obj/syntax.o \
- 	obj/tag.o \
- 	obj/term.o \
- 	obj/ui.o \
- 	obj/undo.o \
- 	obj/usercmd.o \
- 	obj/userfunc.o \
- 	obj/window.o \
- 	$(TERMLIB)
- 
- PRO =	proto/arabic.pro \
- 	proto/autocmd.pro \
- 	proto/blowfish.pro \
- 	proto/buffer.pro \
- 	proto/change.pro \
- 	proto/charset.pro \
- 	proto/crypt.pro \
- 	proto/crypt_zip.pro \
- 	proto/debugger.pro \
- 	proto/dict.pro \
- 	proto/diff.pro \
- 	proto/digraph.pro \
- 	proto/edit.pro \
- 	proto/eval.pro \
- 	proto/evalfunc.pro \
- 	proto/ex_cmds.pro \
- 	proto/ex_cmds2.pro \
- 	proto/ex_docmd.pro \
- 	proto/ex_eval.pro \
- 	proto/ex_getln.pro \
- 	proto/fileio.pro \
- 	proto/findfile.pro \
- 	proto/fold.pro \
- 	proto/getchar.pro \
- 	proto/hardcopy.pro \
- 	proto/hashtab.pro \
- 	proto/indent.pro \
- 	proto/insexpand.pro \
- 	proto/json.pro \
- 	proto/list.pro \
- 	proto/main.pro \
- 	proto/mark.pro \
- 	proto/memfile.pro \
- 	proto/memline.pro \
- 	proto/menu.pro \
- 	proto/message.pro \
- 	proto/misc1.pro \
- 	proto/misc2.pro \
- 	proto/move.pro \
- 	proto/mbyte.pro \
- 	proto/normal.pro \
- 	proto/ops.pro \
- 	proto/option.pro \
- 	proto/os_amiga.pro \
- 	proto/popupmnu.pro \
- 	proto/profiler.pro \
- 	proto/quickfix.pro \
- 	proto/regexp.pro \
- 	proto/screen.pro \
- 	proto/search.pro \
- 	proto/sha256.pro \
- 	proto/sign.pro \
- 	proto/spell.pro \
- 	proto/spellfile.pro \
- 	proto/syntax.pro \
- 	proto/tag.pro \
- 	proto/term.pro \
- 	proto/termlib.pro \
- 	proto/ui.pro \
- 	proto/undo.pro \
- 	proto/usercmd.pro \
- 	proto/userfunc.pro \
- 	proto/window.pro
- 
- all: Vim xxd/Xxd
- 
- Vim: obj $(OBJ) version.c version.h
- 	$(CC) $(CFLAGS) version.c -o obj/version.o
- 	$(LN) $(LNFLAGS) -m -o Vim $(OBJ) obj/version.o $(LIBS)
- 
- debug: obj $(OBJ) version.c version.h
- 	$(CC) $(CFLAGS) version.c -o obj/version.o
- 	$(LN) $(LNFLAGS) -m -g -o Vim $(OBJ) obj/version.o $(LIBS)
- 
- xxd/Xxd: xxd/xxd.c
- 	$(SHELL) -c cd xxd; make -f Make_amiga.mak; cd ..
- 
- # Making prototypes with Manx has been removed, because it caused too many
- # problems.
- #proto: $(SYMS) $(PRO)
- 
- obj:
- 	makedir obj
- 
- tags: $(SRC) $(INCL)
- 	$(SHELL) -c ctags $(SRC) *.h
- 
- # can't use delete here, too many file names
- clean:
- 	$(DEL) $(OBJ) obj/version.o \
- 		obj/termlib.o Vim $(SYMS) xxd/Xxd
- 
- test:
- 	$(SHELL) -c cd testdir; make -f Make_amiga.mak; cd ..
- 
- $(SYMS): $(INCL) $(PRO)
- 	$(CC) $(CFLAGS) -ho$(SYMS) vim.h
- 
- ###########################################################################
- 
- # Unfortunately, Manx's make doesn't understand a .c.o rule, so each
- # compilation command has to be given explicitly.
- 
- CCSYM = $(CC) $(CFLAGS) -hi$(SYMS) -o
- CCNOSYM = $(CC) $(CFLAGS) -o
- 
- $(OBJ): $(SYMS)
- 
- obj/arabic.o:	arabic.c
- 	$(CCSYM) $@ arabic.c
- 
- obj/autocmd.o:	autocmd.c
- 	$(CCSYM) $@ autocmd.c
- 
- obj/blowfish.o:	blowfish.c
- 	$(CCSYM) $@ blowfish.c
- 
- obj/buffer.o:	buffer.c
- 	$(CCSYM) $@ buffer.c
- 
- obj/change.o:	change.c
- 	$(CCSYM) $@ change.c
- 
- obj/charset.o:	charset.c
- 	$(CCSYM) $@ charset.c
- 
- obj/crypt.o:	crypt.c
- 	$(CCSYM) $@ crypt.c
- 
- obj/crypt_zip.o: crypt_zip.c
- 	$(CCSYM) $@ crypt_zip.c
- 
- obj/debugger.o:	debugger.c
- 	$(CCSYM) $@ debugger.c
- 
- obj/dict.o:	dict.c
- 	$(CCSYM) $@ dict.c
- 
- obj/diff.o:	diff.c
- 	$(CCSYM) $@ diff.c
- 
- obj/digraph.o:	digraph.c
- 	$(CCSYM) $@ digraph.c
- 
- obj/edit.o:	edit.c
- 	$(CCSYM) $@ edit.c
- 
- obj/eval.o:	eval.c
- 	$(CCSYM) $@ eval.c
- 
- obj/evalfunc.o:	evalfunc.c
- 	$(CCSYM) $@ evalfunc.c
- 
- obj/ex_cmds.o:	ex_cmds.c
- 	$(CCSYM) $@ ex_cmds.c
- 
- obj/ex_cmds2.o:	ex_cmds2.c
- 	$(CCSYM) $@ ex_cmds2.c
- 
- # Don't use $(SYMS) here, because ex_docmd.c defines DO_DECLARE_EXCMD
- obj/ex_docmd.o:	ex_docmd.c ex_cmds.h
- 	$(CCNOSYM) $@ ex_docmd.c
- 
- obj/ex_eval.o:	ex_eval.c ex_cmds.h
- 	$(CCSYM) $@ ex_eval.c
- 
- obj/ex_getln.o:	ex_getln.c
- 	$(CCSYM) $@ ex_getln.c
- 
- obj/fileio.o:	fileio.c
- 	$(CCSYM) $@ fileio.c
- 
- obj/findfile.o:	findfile.c
- 	$(CCSYM) $@ findfile.c
- 
- obj/fold.o:	fold.c
- 	$(CCSYM) $@ fold.c
- 
- obj/getchar.o:	getchar.c
- 	$(CCSYM) $@ getchar.c
- 
- obj/hardcopy.o:	hardcopy.c
- 	$(CCSYM) $@ hardcopy.c
- 
- obj/hashtab.o:	hashtab.c
- 	$(CCSYM) $@ hashtab.c
- 
- obj/indent.o:	indent.c
- 	$(CCSYM) $@ indent.c
- 
- obj/insexpand.o:	insexpand.c
- 	$(CCSYM) $@ insexpand.c
- 
- obj/json.o:	json.c
- 	$(CCSYM) $@ json.c
- 
- obj/list.o:	list.c
- 	$(CCSYM) $@ list.c
- 
- # Don't use $(SYMS) here, because main.c defines EXTERN
- obj/main.o:	main.c option.h globals.h
- 	$(CCNOSYM) $@ main.c
- 
- obj/mark.o:	mark.c
- 	$(CCSYM) $@ mark.c
- 
- obj/memfile.o:	memfile.c
- 	$(CCSYM) $@ memfile.c
- 
- obj/memline.o:	memline.c
- 	$(CCSYM) $@ memline.c
- 
- obj/menu.o:	menu.c
- 	$(CCSYM) $@ menu.c
- 
- # Don't use $(SYMS) here, because message.c defines MESSAGE_FILE
- obj/message.o:	message.c
- 	$(CCNOSYM) $@ message.c
- 
- obj/misc1.o:	misc1.c
- 	$(CCSYM) $@ misc1.c
- 
- obj/misc2.o:	misc2.c
- 	$(CCSYM) $@ misc2.c
- 
- obj/move.o:	move.c
- 	$(CCSYM) $@ move.c
- 
- obj/mbyte.o: mbyte.c
- 	$(CCSYM) $@ mbyte.c
- 
- obj/normal.o:	normal.c
- 	$(CCSYM) $@ normal.c
- 
- obj/ops.o:	ops.c
- 	$(CCSYM) $@ ops.c
- 
- # Don't use $(SYMS) here, because option.h defines variables here
- obj/option.o:	option.c
- 	$(CCNOSYM) $@ option.c
- 
- obj/os_amiga.o:	os_amiga.c
- 	$(CCSYM) $@ os_amiga.c
- 
- obj/popupmnu.o:	popupmnu.c
- 	$(CCSYM) $@ popupmnu.c
- 
- obj/profiler.o:	profiler.c
- 	$(CCSYM) $@ profiler.c
- 
- obj/quickfix.o:	quickfix.c
- 	$(CCSYM) $@ quickfix.c
- 
- obj/regexp.o:	regexp.c
- 	$(CCSYM) $@ regexp.c
- 
- obj/screen.o:	screen.c
- 	$(CCSYM) $@ screen.c
- 
- obj/search.o:	search.c
- 	$(CCSYM) $@ search.c
- 
- obj/sha256.o:	sha256.c
- 	$(CCSYM) $@ sha256.c
- 
- obj/sign.o:	sign.c
- 	$(CCSYM) $@ sign.c
- 
- obj/spell.o:	spell.c
- 	$(CCSYM) $@ spell.c
- 
- obj/spellfile.o: spellfile.c
- 	$(CCSYM) $@ spellfile.c
- 
- obj/syntax.o:	syntax.c
- 	$(CCSYM) $@ syntax.c
- 
- obj/tag.o:	tag.c
- 	$(CCSYM) $@ tag.c
- 
- obj/term.o:	term.c term.h
- 	$(CCSYM) $@ term.c
- 
- obj/termlib.o:	termlib.c
- 	$(CCSYM) $@ termlib.c
- 
- obj/ui.o:	ui.c
- 	$(CCSYM) $@ ui.c
- 
- obj/undo.o:	undo.c
- 	$(CCSYM) $@ undo.c
- 
- obj/usercmd.o:	usercmd.c
- 	$(CCSYM) $@ usercmd.c
- 
- obj/userfunc.o:	userfunc.c
- 	$(CCSYM) $@ userfunc.c
- 
- obj/window.o:	window.c
- 	$(CCSYM) $@ window.c
--- 0 ----
*** ../vim-8.1.1687/src/Make_sas.mak	2019-07-13 22:59:06.922076875 +0200
--- src/Make_sas.mak	1970-01-01 01:00:00.000000000 +0100
***************
*** 1,465 ****
- # vim: set ft=make :
- # Makefile for VIM on the Amiga, using SAS/Lattice C 6.0 to 6.58
- #
- # Do NOT use the peephole optimizer with a version before 6.56!
- # It messes up all kinds of things:
- # For 6.0 and 6.1, expand_env() will not work correctly.
- # For 6.2 and 6.3 the call to free_line in u_freeentry is wrong.
- # The "read.me" file for version 6.56 includes a remark about a fix for the
- # peephole optimizer.  Everything before 6.56 will probably fail.
- #
- # You should use Manx Aztec C whenever possible, because it has been tested.
- #
- # The prototypes from Manx and SAS are incompatible. If the prototypes
- # were generated by Manx, first do "touch *.c; make proto" before "make".
- # The prototypes generated on Unix work for both.
- #
- # Note: Not all dependencies are included. This was done to avoid having
- #       to compile everything when a global variable or function is added.
- 
- #>>>>> choose options:
- 
- ### See feature.h for a list of optionals.
- ### Any other defines can be included here.
- 
- # NO_ARP	Don't include ARP functions
- # SASC=658	Sas/C version number
- # NEWSASC	fixes a bug in the syntax highlighting?
- DEFINES = DEF=NO_ARP DEF=NEWSASC DEF="SASC=658"
- 
- #>>>>> if HAVE_TGETENT is defined termlib.o has to be used
- #TERMLIB = termlib.o
- TERMLIB =
- 
- #>>>>> choose NODEBUG for normal compiling, the other for debugging and
- # profiling
- # don't switch on debugging when generating proto files, it crashes the
- # compiler.
- DBG = NODEBUG
- #DBG = DBG=SF
- 
- #>>>>> choose NOOPTPEEP for 6.0 to 6.3, NOOPT for debugging
- # with version 6.56 and later you can probably use OPT
- OPTIMIZE  = OPT
- #OPTIMIZE = NOOPTPEEP
- #OPTIMIZE = NOOPT
- 
- # for 6.58 you can use the line below, but be warned it takes a loooonnnggg time
- #OPTIMIZE=OPT  OPTIMIZERSCHEDULER OPTIMIZERTIME NoOPTIMIZERALIAS \
- 	OptimizerComplexity=10 OptimizerDepth=10 OptimizerRecurDepth=10 \
- 	OptimizerInLocal OPTPEEP
- 
- #generate code for your processor - 68060 will work for 040's as well.
- CPU=68000
- #CPU=68020
- #CPU=68030
- #CPU=68040
- #CPU=68060
- 
- #Error reporting - rexx or console
- ERROR = ERRORCONSOLE ERRORSOURCE ERRORHIGHLIGHT
- #ERROR = ERRORREXX ERRORCONSOLE ERRORSOURCE ERRORHIGHLIGHT
- 
- #memory types, if you have fast use it :->,
- #	ANY = will work on all machines
- #	FAST = this is the best option, for speed
- #MEMORYTYPE=FAST
- MEMORYTYPE=ANY
- 
- #MEMSIZE - this is for compile time only for speed of compilation
- #MEMSIZE=HUGE
- MEMSIZE=LARGE
- #MEMSIZE=SMALL
- 
- #>>>>> end of choices
- ###########################################################################
- 
- CC	= sc
- GST	= vim.gst
- COPTS	= SINT SCODE SDATA
- SHELL	= csh
- DEL	= $(SHELL) -c rm -f
- 
- # ignore error messages for uninitialized variables, they are mostly not correct
- CFLAGS  = NOLINK $(DBG) CPU=$(CPU) NOSTACKCHECK DEF=AMIGA CODE=FAR idir=proto ignore=317
- CFLAGS2 = $(OPTIMIZE) $(ERROR) GSTIMMEDIATE GST=$(GST)
- CFLAGS3 = $(COPTS) STRINGMERGE MEMSIZE=$(MEMSIZE)
- CFLAGS4 = $(DEFINES) DATAMEMORY=$(MEMORYTYPE)
- 
- PROPT = DEF=PROTO GPROTO GPPARM MAXIMUMERRORS=999 GENPROTOSTATICS GENPROTOPARAMETERS
- 
- SRC = \
- 	arabic.c \
- 	autocmd.c \
- 	blowfish.c \
- 	buffer.c \
- 	change.c \
- 	charset.c \
- 	crypt.c \
- 	crypt_zip.c \
- 	debugger.c \
- 	dict.c \
- 	diff.c \
- 	digraph.c \
- 	edit.c \
- 	eval.c \
- 	evalfunc.c \
- 	ex_cmds.c \
- 	ex_cmds2.c \
- 	ex_docmd.c \
- 	ex_eval.c \
- 	ex_getln.c \
- 	fileio.c \
- 	findfile.c \
- 	fold.c \
- 	getchar.c \
- 	hardcopy.c \
- 	hashtab.c \
- 	indent.c \
- 	insexpand.c \
- 	json.c \
- 	list.c \
- 	main.c \
- 	mark.c \
- 	memfile.c \
- 	memline.c \
- 	menu.c \
- 	message.c \
- 	misc1.c \
- 	misc2.c \
- 	move.c \
- 	mbyte.c \
- 	normal.c \
- 	ops.c \
- 	option.c \
- 	os_amiga.c \
- 	popupmnu.c \
- 	profiler.c \
- 	quickfix.c \
- 	regexp.c \
- 	screen.c \
- 	search.c \
- 	sha256.c \
- 	sign.c \
- 	spell.c \
- 	spellfile.c \
- 	syntax.c \
- 	tag.c \
- 	term.c \
- 	ui.c \
- 	undo.c \
- 	usercmd.c \
- 	userfunc.c \
- 	window.c \
- 	version.c
- 
- OBJ = \
- 	arabic.o \
- 	autocmd.o \
- 	blowfish.o \
- 	buffer.o \
- 	change.o \
- 	charset.o \
- 	crypt.o \
- 	crypt_zip.o \
- 	debugger.o \
- 	dict.o \
- 	diff.o \
- 	digraph.o \
- 	edit.o \
- 	eval.o \
- 	evalfunc.o \
- 	ex_cmds.o \
- 	ex_cmds2.o \
- 	ex_docmd.o \
- 	ex_eval.o \
- 	ex_getln.o \
- 	fileio.o \
- 	findfile.o \
- 	fold.o \
- 	getchar.o \
- 	hardcopy.o \
- 	hashtab.o \
- 	indent.o \
- 	insexpand.o \
- 	json.o \
- 	list.o \
- 	main.o \
- 	mark.o \
- 	memfile.o \
- 	memline.o \
- 	menu.o \
- 	message.o \
- 	misc1.o \
- 	misc2.o \
- 	move.o \
- 	mbyte.o \
- 	normal.o \
- 	ops.o \
- 	option.o \
- 	os_amiga.o \
- 	popupmnu.o \
- 	profiler.o \
- 	quickfix.o \
- 	regexp.o \
- 	screen.o \
- 	search.o \
- 	sha256.o \
- 	sign.o \
- 	spell.o \
- 	spellfile.o \
- 	syntax.o \
- 	tag.o \
- 	term.o \
- 	ui.o \
- 	undo.o \
- 	usercmd.o \
- 	userfunc.o \
- 	window.o \
- 	$(TERMLIB)
- 
- PRO = \
- 	proto/arabic.pro \
- 	proto/autocmd.pro \
- 	proto/blowfish.pro \
- 	proto/buffer.pro \
- 	proto/change.pro \
- 	proto/charset.pro \
- 	proto/crypt.pro \
- 	proto/crypt_zip.pro \
- 	proto/debugger.pro \
- 	proto/dict.pro \
- 	proto/diff.pro \
- 	proto/digraph.pro \
- 	proto/edit.pro \
- 	proto/eval.pro \
- 	proto/evalfunc.pro \
- 	proto/ex_cmds.pro \
- 	proto/ex_cmds2.pro \
- 	proto/ex_docmd.pro \
- 	proto/ex_eval.pro \
- 	proto/ex_getln.pro \
- 	proto/fileio.pro \
- 	proto/findfile.pro \
- 	proto/fold.pro \
- 	proto/getchar.pro \
- 	proto/hardcopy.pro \
- 	proto/hashtab.pro \
- 	proto/indent.pro \
- 	proto/insexpand.pro \
- 	proto/json.pro \
- 	proto/list.pro \
- 	proto/main.pro \
- 	proto/mark.pro \
- 	proto/memfile.pro \
- 	proto/memline.pro \
- 	proto/menu.pro \
- 	proto/message.pro \
- 	proto/misc1.pro \
- 	proto/misc2.pro \
- 	proto/move.pro \
- 	proto/mbyte.pro \
- 	proto/normal.pro \
- 	proto/ops.pro \
- 	proto/option.pro \
- 	proto/os_amiga.pro \
- 	proto/popupmnu.pro \
- 	proto/profiler.pro \
- 	proto/quickfix.pro \
- 	proto/regexp.pro \
- 	proto/screen.pro \
- 	proto/search.pro \
- 	proto/sha256.pro \
- 	proto/sign.pro \
- 	proto/spell.pro \
- 	proto/spellfile.pro \
- 	proto/syntax.pro \
- 	proto/tag.pro \
- 	proto/term.pro \
- 	proto/termlib.pro \
- 	proto/ui.pro \
- 	proto/undo.pro \
- 	proto/usercmd.pro \
- 	proto/userfunc.pro \
- 	proto/window.pro
- 
- all: proto Vim
- 
- Vim: scoptions $(OBJ) version.c version.h
- 	$(CC) $(CFLAGS) version.c
- 	$(CC) LINK $(COPTS) $(OBJ) version.o $(DBG) PNAME=Vim
- 
- debug: scoptions $(OBJ) version.c version.h
- 	$(CC) $(CFLAGS) version.c
- 	$(CC) LINK $(COPTS) $(OBJ) version.o $(DBG) PNAME=Vim
- 
- proto: $(GST) $(PRO)
- 
- tags:
- 	spat ctags $(SRC) *.h
- #	csh -c ctags $(SRC) *.h
- 
- # can't use delete here, too many file names
- clean:
- 	$(DEL) *.o Vim $(GST)
- 
- # generate GlobalSymbolTable, which speeds up the compile time.
- #
- # A preprocessing stage is used to work around a bug in the GST generator, in
- # that it does not handle nested makefiles properly in this stage.
- # Ignore error message for not producing any code (105).
- $(GST): scoptions vim.h keymap.h macros.h ascii.h term.h structs.h
- 	$(CC) $(CFLAGS) PREPROCESSORONLY vim.h objectname pre.h
- 	$(CC) MGST=$(GST) pre.h ignore=105
- 	$(DEL) pre.h
- 
- # generate an options file, because SAS/C smake can't handle the amiga command
- # line can handle the lengths that this makefile will impose on the shell.
- # (Manx's make can do this).
- scoptions: Make_sas.mak
- 	@echo "Generating - $@ ..."
- 	@echo $(CFLAGS) > scoptions
- 	@echo $(CFLAGS1) >> scoptions
- 	@echo $(CFLAGS2) >> scoptions
- 	@echo $(CFLAGS3) >> scoptions
- 	@echo $(CFLAGS4) >> scoptions
- 	@echo $(COPTS) >>scoptions
- 	@echo done
- 
- ###########################################################################
- 
- $(OBJ): $(GST) vim.h
- $(PRO): $(GST) vim.h
- 
- .c.o:
- 	$(CC) $(CFLAGS) $*.c
- 
- .c.pro:
- 	$(CC) $(CFLAGS) GPFILE=proto/$*.pro $(PROPT) $*.c
- 
- # dependencies
- arabic.o:		arabic.c
- proto/arabic.pro:	arabic.c
- autocmd.o:		autocmd.c
- proto/autocmd.pro:	autocmd.c
- blowfish.o:		blowfish.c
- proto/blowfish.pro:	blowfish.c
- buffer.o:		buffer.c
- proto/buffer.pro:	buffer.c
- change.o:		change.c
- proto/change.pro:	change.c
- charset.o:		charset.c
- proto/charset.pro:	charset.c
- crypt.o:		crypt.c
- proto/crypt.pro:	crypt.c
- crypt_zip.o:		crypt_zip.c
- proto/crypt_zip.pro:	crypt_zip.c
- debugger.o:		debugger.c
- proto/debugger.pro:	debugger.c
- dict.o:			dict.c
- proto/dict.pro:		dict.c
- diff.o:			diff.c
- proto/diff.pro:		diff.c
- digraph.o:		digraph.c
- proto/digraph.pro:	digraph.c
- edit.o:			edit.c
- proto/edit.pro:		edit.c
- eval.o:			eval.c
- proto/eval.pro:		eval.c
- evalfunc.o:		evalfunc.c
- proto/evalfunc.pro:	evalfunc.c
- ex_cmds.o:		ex_cmds.c
- proto/ex_cmds.pro:	ex_cmds.c
- ex_cmds2.o:		ex_cmds2.c
- proto/ex_cmds2.pro:	ex_cmds2.c
- ex_docmd.o:		ex_docmd.c ex_cmds.h
- proto/ex_docmd.pro:	ex_docmd.c ex_cmds.h
- ex_eval.o:		ex_eval.c ex_cmds.h
- proto/ex_eval.pro:	ex_eval.c ex_cmds.h
- ex_getln.o:		ex_getln.c
- proto/ex_getln.pro:	ex_getln.c
- fileio.o:		fileio.c
- proto/fileio.pro:	fileio.c
- findfile.o:		findfile.c
- proto/findfile.pro:	findfile.c
- fold.o:			fold.c
- proto/fold.pro:		fold.c
- getchar.o:		getchar.c
- proto/getchar.pro:	getchar.c
- hardcopy.o:		hardcopy.c
- proto/hardcopy.pro:	hardcopy.c
- hashtab.o:		hashtab.c
- proto/hashtab.pro:	hashtab.c
- indent.o:		indent.c
- proto/indent.pro:	indent.c
- insexpand.o:		insexpand.c
- proto/insexpand.pro:	insexpand.c
- json.o:			json.c
- proto/json.pro:		json.c
- list.o:			list.c
- proto/list.pro:		list.c
- main.o:			main.c
- proto/main.pro:		main.c
- mark.o:			mark.c
- proto/mark.pro:		mark.c
- memfile.o:		memfile.c
- proto/memfile.pro:	memfile.c
- memline.o:		memline.c
- proto/memline.pro:	memline.c
- menu.o:			menu.c
- proto/menu.pro:		menu.c
- message.o:		message.c
- proto/message.pro:	message.c
- misc1.o:		misc1.c
- proto/misc1.pro:	misc1.c
- misc2.o:		misc2.c
- proto/misc2.pro:	misc2.c
- move.o:			move.c
- proto/move.pro:		move.c
- mbyte.o:		mbyte.c
- proto/mbyte.pro:	mbyte.c
- normal.o:		normal.c
- proto/normal.pro:	normal.c
- ops.o:			ops.c
- proto/ops.pro:		ops.c
- option.o:		option.c
- proto/option.pro:	option.c
- os_amiga.o:		os_amiga.c
- proto/os_amiga.pro:	os_amiga.c
- popupmnu.o:		popupmnu.c
- proto/popupmnu.pro:	popupmnu.c
- profiler.o:		profiler.c
- proto/profiler.pro:	profiler.c
- quickfix.o:		quickfix.c
- proto/quickfix.pro:	quickfix.c
- regexp.o:		regexp.c
- proto/regexp.pro:	regexp.c
- screen.o:		screen.c
- proto/screen.pro:	screen.c
- search.o:		search.c
- proto/search.pro:	search.c
- sha256.o:		sha256.c
- proto/sha256.pro:	sha256.c
- sign.o:			sign.c
- proto/sign.pro:		sign.c
- spell.o:		spell.c
- proto/spell.pro:	spell.c
- spellfile.o:		spellfile.c
- proto/spellfile.pro:	spellfile.c
- syntax.o:		syntax.c
- proto/syntax.pro:	syntax.c
- tag.o:			tag.c
- proto/tag.pro:		tag.c
- term.o:			term.c
- proto/term.pro:		term.c
- termlib.o:		termlib.c
- proto/termlib.pro:	termlib.c
- ui.o:			ui.c
- proto/ui.pro:		ui.c
- undo.o:			undo.c
- proto/undo.pro:		undo.c
- usercmd.o:		usercmd.c
- proto/usercmd.pro:	usercmd.c
- userfunc.o:		userfunc.c
- proto/userfunc.pro:	userfunc.c
- window.o:		window.c
--- 0 ----
*** ../vim-8.1.1687/src/version.c	2019-07-14 14:55:20.372881409 +0200
--- src/version.c	2019-07-14 15:08:27.435760202 +0200
***************
*** 779,780 ****
--- 779,782 ----
  {   /* Add new patch number below this line */
+ /**/
+     1688,
  /**/

-- 
In Africa some of the native tribes have a custom of beating the ground
with clubs and uttering spine chilling cries.  Anthropologists call
this a form of primitive self-expression.  In America we call it golf.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
