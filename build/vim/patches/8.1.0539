To: vim_dev@googlegroups.com
Subject: Patch 8.1.0539
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.0539
Problem:    Cannot build without the sandbox.
Solution:   Set the secure option instead of using the sandbox.  Also restrict
            the characters from 'spelllang' that are used for LANG.vim.
            (suggested by Yasuhiro Matsumoto)
Files:	    runtime/doc/options.txt, src/buffer.c, src/option.c


*** ../vim-8.1.0538/runtime/doc/options.txt	2018-09-10 21:15:34.637000672 +0200
--- runtime/doc/options.txt	2018-11-20 13:01:10.046464576 +0100
***************
*** 7298,7304 ****
  
  	After this option has been set successfully, Vim will source the files
  	"spell/LANG.vim" in 'runtimepath'.  "LANG" is the value of 'spelllang'
! 	up to the first comma, dot or underscore.
  	Also see |set-spc-auto|.
  
  
--- 7339,7345 ----
  
  	After this option has been set successfully, Vim will source the files
  	"spell/LANG.vim" in 'runtimepath'.  "LANG" is the value of 'spelllang'
! 	up to the first character that is not an ASCII letter and not a dash.
  	Also see |set-spc-auto|.
  
  
*** ../vim-8.1.0538/src/buffer.c	2018-11-20 04:25:14.882952236 +0100
--- src/buffer.c	2018-11-20 12:52:53.914128541 +0100
***************
*** 5523,5533 ****
  		current_sctx.sc_lnum = 0;
  #endif
  		// Make sure no risky things are executed as a side effect.
! 		++sandbox;
  
  		retval = do_set(s, OPT_MODELINE | OPT_LOCAL | flags);
  
! 		--sandbox;
  #ifdef FEAT_EVAL
  		current_sctx = save_current_sctx;
  #endif
--- 5523,5533 ----
  		current_sctx.sc_lnum = 0;
  #endif
  		// Make sure no risky things are executed as a side effect.
! 		++secure;
  
  		retval = do_set(s, OPT_MODELINE | OPT_LOCAL | flags);
  
! 		--secure;
  #ifdef FEAT_EVAL
  		current_sctx = save_current_sctx;
  #endif
*** ../vim-8.1.0538/src/option.c	2018-11-10 17:33:23.091518784 +0100
--- src/option.c	2018-11-20 13:06:15.300199192 +0100
***************
*** 7758,7767 ****
  	     * '.encoding'.
  	     */
  	    for (p = q; *p != NUL; ++p)
! 		if (vim_strchr((char_u *)"_.,", *p) != NULL)
  		    break;
! 	    vim_snprintf((char *)fname, 200, "spell/%.*s.vim", (int)(p - q), q);
! 	    source_runtime(fname, DIP_ALL);
  	}
  #endif
      }
--- 7759,7771 ----
  	     * '.encoding'.
  	     */
  	    for (p = q; *p != NUL; ++p)
! 		if (!ASCII_ISALPHA(*p) && *p != '-')
  		    break;
! 	    if (p > q)
! 	    {
! 		vim_snprintf((char *)fname, 200, "spell/%.*s.vim", (int)(p - q), q);
! 		source_runtime(fname, DIP_ALL);
! 	    }
  	}
  #endif
      }
*** ../vim-8.1.0538/src/version.c	2018-11-20 04:25:14.882952236 +0100
--- src/version.c	2018-11-20 13:02:21.057938065 +0100
***************
*** 794,795 ****
--- 794,797 ----
  {   /* Add new patch number below this line */
+ /**/
+     539,
  /**/

-- 
ARTHUR: Charge!
   [They all charge with swords drawn towards the RABBIT.  A tremendous twenty
   second fight with Peckinpahish shots and borrowing heavily also on the
   Kung Fu and karate-type films ensues, in which some four KNIGHTS are
   comprehensively killed.]
ARTHUR: Run away!  Run away!
                 "Monty Python and the Holy Grail" PYTHON (MONTY) PICTURES LTD

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
