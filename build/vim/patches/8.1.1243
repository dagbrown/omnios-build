To: vim_dev@googlegroups.com
Subject: Patch 8.1.1243
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1243 (after 8.1.1241)
Problem:    Compiler warnings for incomplete switch statement. (Tony
            Mechelynck)
Solution:   Add ADDR_QUICKFIX to the list.
Files:	    src/ex_docmd.c


*** ../vim-8.1.1242/src/ex_docmd.c	2019-05-01 18:08:38.267237229 +0200
--- src/ex_docmd.c	2019-05-01 21:41:39.121052508 +0200
***************
*** 2228,2240 ****
  		else
  		    ea.line2 = ARGCOUNT;
  		break;
- #ifdef FEAT_QUICKFIX
  	    case ADDR_QUICKFIX:
  		ea.line2 = qf_get_size(&ea);
  		if (ea.line2 == 0)
  		    ea.line2 = 1;
- 		break;
  #endif
  	    case ADDR_NONE:
  		iemsg(_("INTERNAL: Cannot use DFLALL with ADDR_NONE"));
  		break;
--- 2228,2240 ----
  		else
  		    ea.line2 = ARGCOUNT;
  		break;
  	    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  		ea.line2 = qf_get_size(&ea);
  		if (ea.line2 == 0)
  		    ea.line2 = 1;
  #endif
+ 		break;
  	    case ADDR_NONE:
  		iemsg(_("INTERNAL: Cannot use DFLALL with ADDR_NONE"));
  		break;
***************
*** 2906,2916 ****
  	    case ADDR_TABS_RELATIVE:
  		eap->line2 = 1;
  		break;
- #ifdef FEAT_QUICKFIX
  	    case ADDR_QUICKFIX:
  		eap->line2 = qf_get_cur_valid_idx(eap);
- 		break;
  #endif
  	    case ADDR_NONE:
  		// Will give an error later if a range is found.
  		break;
--- 2906,2916 ----
  	    case ADDR_TABS_RELATIVE:
  		eap->line2 = 1;
  		break;
  	    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  		eap->line2 = qf_get_cur_valid_idx(eap);
  #endif
+ 		break;
  	    case ADDR_NONE:
  		// Will give an error later if a range is found.
  		break;
***************
*** 2979,2992 ****
  			    eap->line2 = ARGCOUNT;
  			}
  			break;
- #ifdef FEAT_QUICKFIX
  		    case ADDR_QUICKFIX:
  			eap->line1 = 1;
  			eap->line2 = qf_get_size(eap);
  			if (eap->line2 == 0)
  			    eap->line2 = 1;
- 			break;
  #endif
  		    case ADDR_NONE:
  			// Will give an error later if a range is found.
  			break;
--- 2979,2992 ----
  			    eap->line2 = ARGCOUNT;
  			}
  			break;
  		    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  			eap->line1 = 1;
  			eap->line2 = qf_get_size(eap);
  			if (eap->line2 == 0)
  			    eap->line2 = 1;
  #endif
+ 			break;
  		    case ADDR_NONE:
  			// Will give an error later if a range is found.
  			break;
***************
*** 4271,4281 ****
  			cmd = NULL;
  			goto error;
  			break;
- #ifdef FEAT_QUICKFIX
  		    case ADDR_QUICKFIX:
  			lnum = qf_get_cur_valid_idx(eap);
- 			break;
  #endif
  		}
  		break;
  
--- 4271,4281 ----
  			cmd = NULL;
  			goto error;
  			break;
  		    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  			lnum = qf_get_cur_valid_idx(eap);
  #endif
+ 			break;
  		}
  		break;
  
***************
*** 4315,4327 ****
  			cmd = NULL;
  			goto error;
  			break;
- #ifdef FEAT_QUICKFIX
  		    case ADDR_QUICKFIX:
  			lnum = qf_get_size(eap);
  			if (lnum == 0)
  			    lnum = 1;
- 			break;
  #endif
  		}
  		break;
  
--- 4315,4327 ----
  			cmd = NULL;
  			goto error;
  			break;
  		    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  			lnum = qf_get_size(eap);
  			if (lnum == 0)
  			    lnum = 1;
  #endif
+ 			break;
  		}
  		break;
  
***************
*** 4500,4510 ****
  		    case ADDR_TABS_RELATIVE:
  			lnum = 1;
  			break;
- #ifdef FEAT_QUICKFIX
  		    case ADDR_QUICKFIX:
  			lnum = qf_get_cur_valid_idx(eap);
- 			break;
  #endif
  		    case ADDR_NONE:
  			break;
  		}
--- 4500,4510 ----
  		    case ADDR_TABS_RELATIVE:
  			lnum = 1;
  			break;
  		    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  			lnum = qf_get_cur_valid_idx(eap);
  #endif
+ 			break;
  		    case ADDR_NONE:
  			break;
  		}
***************
*** 4661,4672 ****
  	    case ADDR_OTHER:
  		// Any range is OK.
  		break;
- #ifdef FEAT_QUICKFIX
  	    case ADDR_QUICKFIX:
  		if (eap->line2 != 1 && eap->line2 > qf_get_size(eap))
  		    return _(e_invrange);
- 		break;
  #endif
  	    case ADDR_NONE:
  		// Will give an error elsewhere.
  		break;
--- 4661,4672 ----
  	    case ADDR_OTHER:
  		// Any range is OK.
  		break;
  	    case ADDR_QUICKFIX:
+ #ifdef FEAT_QUICKFIX
  		if (eap->line2 != 1 && eap->line2 > qf_get_size(eap))
  		    return _(e_invrange);
  #endif
+ 		break;
  	    case ADDR_NONE:
  		// Will give an error elsewhere.
  		break;
*** ../vim-8.1.1242/src/version.c	2019-05-01 20:30:19.598426336 +0200
--- src/version.c	2019-05-01 21:43:30.252314911 +0200
***************
*** 769,770 ****
--- 769,772 ----
  {   /* Add new patch number below this line */
+ /**/
+     1243,
  /**/

-- 
Two cows are standing together in a field.  One asks the other:
"So what do you think about this Mad Cow Disease?"
The other replies: "That doesn't concern me. I'm a helicopter."

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
