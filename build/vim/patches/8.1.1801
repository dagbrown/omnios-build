To: vim_dev@googlegroups.com
Subject: Patch 8.1.1801
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 8.1.1801
Problem:    Cannot build without the +eval feature.
Solution:   Always define funcexe_T.
Files:	    src/structs.h


*** ../vim-8.1.1800/src/structs.h	2019-08-03 18:17:07.680638632 +0200
--- src/structs.h	2019-08-03 18:26:51.051757636 +0200
***************
*** 1517,1538 ****
  				// "func"
  };
  
- // Struct passed between functions dealing with function call execution.
- //
- // "argv_func", when not NULL, can be used to fill in arguments only when the
- // invoked function uses them.  It is called like this:
- //   new_argcount = argv_func(current_argcount, argv, called_func_argcount)
- //
- typedef struct {
-     int		(* argv_func)(int, typval_T *, int);
-     linenr_T	firstline;	// first line of range
-     linenr_T	lastline;	// last line of range
-     int		*doesrange;	// if not NULL: return: function handled range
-     int		evaluate;	// actually evaluate expressions
-     partial_T	*partial;	// for extra arguments
-     dict_T	*selfdict;	// Dictionary for "self"
- } funcexe_T;
- 
  /*
   * Struct used by trans_function_name()
   */
--- 1517,1522 ----
***************
*** 1621,1626 ****
--- 1605,1626 ----
  } scriptitem_T;
  #endif
  
+ // Struct passed between functions dealing with function call execution.
+ //
+ // "argv_func", when not NULL, can be used to fill in arguments only when the
+ // invoked function uses them.  It is called like this:
+ //   new_argcount = argv_func(current_argcount, argv, called_func_argcount)
+ //
+ typedef struct {
+     int		(* argv_func)(int, typval_T *, int);
+     linenr_T	firstline;	// first line of range
+     linenr_T	lastline;	// last line of range
+     int		*doesrange;	// if not NULL: return: function handled range
+     int		evaluate;	// actually evaluate expressions
+     partial_T	*partial;	// for extra arguments
+     dict_T	*selfdict;	// Dictionary for "self"
+ } funcexe_T;
+ 
  struct partial_S
  {
      int		pt_refcount;	// reference count
*** ../vim-8.1.1800/src/version.c	2019-08-03 18:17:07.684638594 +0200
--- src/version.c	2019-08-03 18:28:04.043217509 +0200
***************
*** 775,776 ****
--- 775,778 ----
  {   /* Add new patch number below this line */
+ /**/
+     1801,
  /**/

-- 
hundred-and-one symptoms of being an internet addict:
19. All of your friends have an @ in their names.

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
